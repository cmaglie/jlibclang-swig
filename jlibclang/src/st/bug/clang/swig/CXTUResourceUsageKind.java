/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package st.bug.clang.swig;

public enum CXTUResourceUsageKind {
  CXTUResourceUsage_AST(1),
  CXTUResourceUsage_Identifiers(2),
  CXTUResourceUsage_Selectors(3),
  CXTUResourceUsage_GlobalCompletionResults(4),
  CXTUResourceUsage_SourceManagerContentCache(5),
  CXTUResourceUsage_AST_SideTables(6),
  CXTUResourceUsage_SourceManager_Membuffer_Malloc(7),
  CXTUResourceUsage_SourceManager_Membuffer_MMap(8),
  CXTUResourceUsage_ExternalASTSource_Membuffer_Malloc(9),
  CXTUResourceUsage_ExternalASTSource_Membuffer_MMap(10),
  CXTUResourceUsage_Preprocessor(11),
  CXTUResourceUsage_PreprocessingRecord(12),
  CXTUResourceUsage_SourceManager_DataStructures(13),
  CXTUResourceUsage_Preprocessor_HeaderSearch(14),
  CXTUResourceUsage_MEMORY_IN_BYTES_BEGIN(CXTUResourceUsage_AST),
  CXTUResourceUsage_MEMORY_IN_BYTES_END(CXTUResourceUsage_Preprocessor_HeaderSearch),
  CXTUResourceUsage_First(CXTUResourceUsage_AST),
  CXTUResourceUsage_Last(CXTUResourceUsage_Preprocessor_HeaderSearch);

  public final int swigValue() {
    return swigValue;
  }

  public static CXTUResourceUsageKind swigToEnum(int swigValue) {
    CXTUResourceUsageKind[] swigValues = CXTUResourceUsageKind.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (CXTUResourceUsageKind swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + CXTUResourceUsageKind.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private CXTUResourceUsageKind() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private CXTUResourceUsageKind(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private CXTUResourceUsageKind(CXTUResourceUsageKind swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

