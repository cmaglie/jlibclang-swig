/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package st.bug.clang.swig;

public class clangjavaJNI {
  public final static native long new_CXFile_p();
  public final static native void delete_CXFile_p(long jarg1);
  public final static native void CXFile_p_assign(long jarg1, CXFile_p jarg1_, long jarg2);
  public final static native long CXFile_p_value(long jarg1, CXFile_p jarg1_);
  public final static native long CXFile_p_cast(long jarg1, CXFile_p jarg1_);
  public final static native long CXFile_p_frompointer(long jarg1);
  public final static native long new_CXCompletionResultArray(int jarg1);
  public final static native void delete_CXCompletionResultArray(long jarg1, CXCompletionResult jarg1_);
  public final static native long CXCompletionResultArray_getitem(long jarg1, CXCompletionResult jarg1_, int jarg2);
  public final static native void CXCompletionResultArray_setitem(long jarg1, CXCompletionResult jarg1_, int jarg2, long jarg3, CXCompletionResult jarg3_);
  public final static native long new_CXPlatformAvailabilityArray(int jarg1);
  public final static native void delete_CXPlatformAvailabilityArray(long jarg1, CXPlatformAvailability jarg1_);
  public final static native long CXPlatformAvailabilityArray_getitem(long jarg1, CXPlatformAvailability jarg1_, int jarg2);
  public final static native void CXPlatformAvailabilityArray_setitem(long jarg1, CXPlatformAvailability jarg1_, int jarg2, long jarg3, CXPlatformAvailability jarg3_);
  public final static native long new_CXCursorArray(int jarg1);
  public final static native void delete_CXCursorArray(long jarg1, CXCursor jarg1_);
  public final static native long CXCursorArray_getitem(long jarg1, CXCursor jarg1_, int jarg2);
  public final static native void CXCursorArray_setitem(long jarg1, CXCursor jarg1_, int jarg2, long jarg3, CXCursor jarg3_);
  public final static native void CXString_data_set(long jarg1, CXString jarg1_, long jarg2);
  public final static native long CXString_data_get(long jarg1, CXString jarg1_);
  public final static native void CXString_private_flags_set(long jarg1, CXString jarg1_, long jarg2);
  public final static native long CXString_private_flags_get(long jarg1, CXString jarg1_);
  public final static native long new_CXString();
  public final static native void delete_CXString(long jarg1);
  public final static native String getCString(long jarg1, CXString jarg1_);
  public final static native void disposeString(long jarg1, CXString jarg1_);
  public final static native void CXUnsavedFile_Filename_set(long jarg1, CXUnsavedFile jarg1_, String jarg2);
  public final static native String CXUnsavedFile_Filename_get(long jarg1, CXUnsavedFile jarg1_);
  public final static native void CXUnsavedFile_Contents_set(long jarg1, CXUnsavedFile jarg1_, String jarg2);
  public final static native String CXUnsavedFile_Contents_get(long jarg1, CXUnsavedFile jarg1_);
  public final static native void CXUnsavedFile_Length_set(long jarg1, CXUnsavedFile jarg1_, long jarg2);
  public final static native long CXUnsavedFile_Length_get(long jarg1, CXUnsavedFile jarg1_);
  public final static native long new_CXUnsavedFile();
  public final static native void delete_CXUnsavedFile(long jarg1);
  public final static native void CXVersion_Major_set(long jarg1, CXVersion jarg1_, int jarg2);
  public final static native int CXVersion_Major_get(long jarg1, CXVersion jarg1_);
  public final static native void CXVersion_Minor_set(long jarg1, CXVersion jarg1_, int jarg2);
  public final static native int CXVersion_Minor_get(long jarg1, CXVersion jarg1_);
  public final static native void CXVersion_Subminor_set(long jarg1, CXVersion jarg1_, int jarg2);
  public final static native int CXVersion_Subminor_get(long jarg1, CXVersion jarg1_);
  public final static native long new_CXVersion();
  public final static native void delete_CXVersion(long jarg1);
  public final static native long createIndex(int jarg1, int jarg2);
  public final static native void disposeIndex(long jarg1);
  public final static native int CXGlobalOpt_ThreadBackgroundPriorityForAll_get();
  public final static native void CXIndex_setGlobalOptions(long jarg1, long jarg2);
  public final static native long CXIndex_getGlobalOptions(long jarg1);
  public final static native long getFileName(long jarg1);
  public final static native long getFileTime(long jarg1);
  public final static native void CXFileUniqueID_data_set(long jarg1, CXFileUniqueID jarg1_, long jarg2);
  public final static native long CXFileUniqueID_data_get(long jarg1, CXFileUniqueID jarg1_);
  public final static native long new_CXFileUniqueID();
  public final static native void delete_CXFileUniqueID(long jarg1);
  public final static native int getFileUniqueID(long jarg1, long jarg2, CXFileUniqueID jarg2_);
  public final static native long isFileMultipleIncludeGuarded(long jarg1, long jarg2);
  public final static native long getFile(long jarg1, String jarg2);
  public final static native void CXSourceLocation_ptr_data_set(long jarg1, CXSourceLocation jarg1_, long jarg2);
  public final static native long CXSourceLocation_ptr_data_get(long jarg1, CXSourceLocation jarg1_);
  public final static native void CXSourceLocation_int_data_set(long jarg1, CXSourceLocation jarg1_, long jarg2);
  public final static native long CXSourceLocation_int_data_get(long jarg1, CXSourceLocation jarg1_);
  public final static native long new_CXSourceLocation();
  public final static native void delete_CXSourceLocation(long jarg1);
  public final static native void CXSourceRange_ptr_data_set(long jarg1, CXSourceRange jarg1_, long jarg2);
  public final static native long CXSourceRange_ptr_data_get(long jarg1, CXSourceRange jarg1_);
  public final static native void CXSourceRange_begin_int_data_set(long jarg1, CXSourceRange jarg1_, long jarg2);
  public final static native long CXSourceRange_begin_int_data_get(long jarg1, CXSourceRange jarg1_);
  public final static native void CXSourceRange_end_int_data_set(long jarg1, CXSourceRange jarg1_, long jarg2);
  public final static native long CXSourceRange_end_int_data_get(long jarg1, CXSourceRange jarg1_);
  public final static native long new_CXSourceRange();
  public final static native void delete_CXSourceRange(long jarg1);
  public final static native long getNullLocation();
  public final static native long equalLocations(long jarg1, CXSourceLocation jarg1_, long jarg2, CXSourceLocation jarg2_);
  public final static native long getLocation(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long getLocationForOffset(long jarg1, long jarg2, long jarg3);
  public final static native int Location_isInSystemHeader(long jarg1, CXSourceLocation jarg1_);
  public final static native long getNullRange();
  public final static native long getRange(long jarg1, CXSourceLocation jarg1_, long jarg2, CXSourceLocation jarg2_);
  public final static native long equalRanges(long jarg1, CXSourceRange jarg1_, long jarg2, CXSourceRange jarg2_);
  public final static native int Range_isNull(long jarg1, CXSourceRange jarg1_);
  public final static native void getExpansionLocation(long jarg1, CXSourceLocation jarg1_, long jarg2, long[] jarg3, long[] jarg4, long[] jarg5);
  public final static native void getPresumedLocation(long jarg1, CXSourceLocation jarg1_, long jarg2, CXString jarg2_, long[] jarg3, long[] jarg4);
  public final static native void getInstantiationLocation(long jarg1, CXSourceLocation jarg1_, long jarg2, long[] jarg3, long[] jarg4, long[] jarg5);
  public final static native void getSpellingLocation(long jarg1, CXSourceLocation jarg1_, long jarg2, long[] jarg3, long[] jarg4, long[] jarg5);
  public final static native void getFileLocation(long jarg1, CXSourceLocation jarg1_, long jarg2, long[] jarg3, long[] jarg4, long[] jarg5);
  public final static native long getRangeStart(long jarg1, CXSourceRange jarg1_);
  public final static native long getRangeEnd(long jarg1, CXSourceRange jarg1_);
  public final static native long getNumDiagnosticsInSet(long jarg1);
  public final static native long getDiagnosticInSet(long jarg1, long jarg2);
  public final static native long loadDiagnostics(String jarg1, long jarg2, long jarg3, CXString jarg3_);
  public final static native void disposeDiagnosticSet(long jarg1);
  public final static native long getChildDiagnostics(long jarg1);
  public final static native long getNumDiagnostics(long jarg1);
  public final static native long getDiagnostic(long jarg1, long jarg2);
  public final static native long getDiagnosticSetFromTU(long jarg1);
  public final static native void disposeDiagnostic(long jarg1);
  public final static native long formatDiagnostic(long jarg1, long jarg2);
  public final static native long defaultDiagnosticDisplayOptions();
  public final static native int getDiagnosticSeverity(long jarg1);
  public final static native long getDiagnosticLocation(long jarg1);
  public final static native long getDiagnosticSpelling(long jarg1);
  public final static native long getDiagnosticOption(long jarg1, long jarg2, CXString jarg2_);
  public final static native long getDiagnosticCategory(long jarg1);
  public final static native long getDiagnosticCategoryName(long jarg1);
  public final static native long getDiagnosticCategoryText(long jarg1);
  public final static native long getDiagnosticNumRanges(long jarg1);
  public final static native long getDiagnosticRange(long jarg1, long jarg2);
  public final static native long getDiagnosticNumFixIts(long jarg1);
  public final static native long getDiagnosticFixIt(long jarg1, long jarg2, long jarg3, CXSourceRange jarg3_);
  public final static native long getTranslationUnitSpelling(long jarg1);
  public final static native long createTranslationUnitFromSourceFile(long jarg1, String jarg2, int jarg3, String[] jarg4, long jarg5, long jarg6, CXUnsavedFile jarg6_);
  public final static native long createTranslationUnit(long jarg1, String jarg2);
  public final static native long defaultEditingTranslationUnitOptions();
  public final static native long parseTranslationUnit(long jarg1, String jarg2, String[] jarg3, int jarg4, long jarg5, CXUnsavedFile jarg5_, long jarg6, long jarg7);
  public final static native long defaultSaveOptions(long jarg1);
  public final static native int saveTranslationUnit(long jarg1, String jarg2, long jarg3);
  public final static native void disposeTranslationUnit(long jarg1);
  public final static native long defaultReparseOptions(long jarg1);
  public final static native int reparseTranslationUnit(long jarg1, long jarg2, long jarg3, CXUnsavedFile jarg3_, long jarg4);
  public final static native String getTUResourceUsageName(int jarg1);
  public final static native void CXTUResourceUsageEntry_kind_set(long jarg1, CXTUResourceUsageEntry jarg1_, int jarg2);
  public final static native int CXTUResourceUsageEntry_kind_get(long jarg1, CXTUResourceUsageEntry jarg1_);
  public final static native void CXTUResourceUsageEntry_amount_set(long jarg1, CXTUResourceUsageEntry jarg1_, long jarg2);
  public final static native long CXTUResourceUsageEntry_amount_get(long jarg1, CXTUResourceUsageEntry jarg1_);
  public final static native long new_CXTUResourceUsageEntry();
  public final static native void delete_CXTUResourceUsageEntry(long jarg1);
  public final static native void CXTUResourceUsage_data_set(long jarg1, CXTUResourceUsage jarg1_, long jarg2);
  public final static native long CXTUResourceUsage_data_get(long jarg1, CXTUResourceUsage jarg1_);
  public final static native void CXTUResourceUsage_numEntries_set(long jarg1, CXTUResourceUsage jarg1_, long jarg2);
  public final static native long CXTUResourceUsage_numEntries_get(long jarg1, CXTUResourceUsage jarg1_);
  public final static native void CXTUResourceUsage_entries_set(long jarg1, CXTUResourceUsage jarg1_, long jarg2, CXTUResourceUsageEntry jarg2_);
  public final static native long CXTUResourceUsage_entries_get(long jarg1, CXTUResourceUsage jarg1_);
  public final static native long new_CXTUResourceUsage();
  public final static native void delete_CXTUResourceUsage(long jarg1);
  public final static native long getCXTUResourceUsage(long jarg1);
  public final static native void disposeCXTUResourceUsage(long jarg1, CXTUResourceUsage jarg1_);
  public final static native void CXCursor_kind_set(long jarg1, CXCursor jarg1_, int jarg2);
  public final static native int CXCursor_kind_get(long jarg1, CXCursor jarg1_);
  public final static native void CXCursor_xdata_set(long jarg1, CXCursor jarg1_, int jarg2);
  public final static native int CXCursor_xdata_get(long jarg1, CXCursor jarg1_);
  public final static native void CXCursor_data_set(long jarg1, CXCursor jarg1_, long jarg2);
  public final static native long CXCursor_data_get(long jarg1, CXCursor jarg1_);
  public final static native long new_CXCursor();
  public final static native void delete_CXCursor(long jarg1);
  public final static native void CXComment_ASTNode_set(long jarg1, CXComment jarg1_, long jarg2);
  public final static native long CXComment_ASTNode_get(long jarg1, CXComment jarg1_);
  public final static native void CXComment_TranslationUnit_set(long jarg1, CXComment jarg1_, long jarg2);
  public final static native long CXComment_TranslationUnit_get(long jarg1, CXComment jarg1_);
  public final static native long new_CXComment();
  public final static native void delete_CXComment(long jarg1);
  public final static native long getNullCursor();
  public final static native long getTranslationUnitCursor(long jarg1);
  public final static native long equalCursors(long jarg1, CXCursor jarg1_, long jarg2, CXCursor jarg2_);
  public final static native int Cursor_isNull(long jarg1, CXCursor jarg1_);
  public final static native long hashCursor(long jarg1, CXCursor jarg1_);
  public final static native int getCursorKind(long jarg1, CXCursor jarg1_);
  public final static native long isDeclaration(int jarg1);
  public final static native long isReference(int jarg1);
  public final static native long isExpression(int jarg1);
  public final static native long isStatement(int jarg1);
  public final static native long isAttribute(int jarg1);
  public final static native long isInvalid(int jarg1);
  public final static native long isTranslationUnit(int jarg1);
  public final static native long isPreprocessing(int jarg1);
  public final static native long isUnexposed(int jarg1);
  public final static native int getCursorLinkage(long jarg1, CXCursor jarg1_);
  public final static native int getCursorAvailability(long jarg1, CXCursor jarg1_);
  public final static native void CXPlatformAvailability_Platform_set(long jarg1, CXPlatformAvailability jarg1_, long jarg2, CXString jarg2_);
  public final static native long CXPlatformAvailability_Platform_get(long jarg1, CXPlatformAvailability jarg1_);
  public final static native void CXPlatformAvailability_Introduced_set(long jarg1, CXPlatformAvailability jarg1_, long jarg2, CXVersion jarg2_);
  public final static native long CXPlatformAvailability_Introduced_get(long jarg1, CXPlatformAvailability jarg1_);
  public final static native void CXPlatformAvailability_Deprecated_set(long jarg1, CXPlatformAvailability jarg1_, long jarg2, CXVersion jarg2_);
  public final static native long CXPlatformAvailability_Deprecated_get(long jarg1, CXPlatformAvailability jarg1_);
  public final static native void CXPlatformAvailability_Obsoleted_set(long jarg1, CXPlatformAvailability jarg1_, long jarg2, CXVersion jarg2_);
  public final static native long CXPlatformAvailability_Obsoleted_get(long jarg1, CXPlatformAvailability jarg1_);
  public final static native void CXPlatformAvailability_Unavailable_set(long jarg1, CXPlatformAvailability jarg1_, int jarg2);
  public final static native int CXPlatformAvailability_Unavailable_get(long jarg1, CXPlatformAvailability jarg1_);
  public final static native void CXPlatformAvailability_Message_set(long jarg1, CXPlatformAvailability jarg1_, long jarg2, CXString jarg2_);
  public final static native long CXPlatformAvailability_Message_get(long jarg1, CXPlatformAvailability jarg1_);
  public final static native long new_CXPlatformAvailability();
  public final static native void delete_CXPlatformAvailability(long jarg1);
  public final static native int getCursorPlatformAvailability(long jarg1, CXCursor jarg1_, long[] jarg2, long jarg3, CXString jarg3_, long[] jarg4, long jarg5, CXString jarg5_, long jarg6, CXPlatformAvailability jarg6_, int jarg7);
  public final static native void disposeCXPlatformAvailability(long jarg1, CXPlatformAvailability jarg1_);
  public final static native int getCursorLanguage(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getTranslationUnit(long jarg1, CXCursor jarg1_);
  public final static native long createCXCursorSet();
  public final static native void disposeCXCursorSet(long jarg1);
  public final static native long CXCursorSet_contains(long jarg1, long jarg2, CXCursor jarg2_);
  public final static native long CXCursorSet_insert(long jarg1, long jarg2, CXCursor jarg2_);
  public final static native long getCursorSemanticParent(long jarg1, CXCursor jarg1_);
  public final static native long getCursorLexicalParent(long jarg1, CXCursor jarg1_);
  public final static native void getOverriddenCursors(long jarg1, CXCursor jarg1_, long jarg2, long[] jarg3);
  public final static native void disposeOverriddenCursors(long jarg1, CXCursor jarg1_);
  public final static native long getIncludedFile(long jarg1, CXCursor jarg1_);
  public final static native long getCursor(long jarg1, long jarg2, CXSourceLocation jarg2_);
  public final static native long getCursorLocation(long jarg1, CXCursor jarg1_);
  public final static native long getCursorExtent(long jarg1, CXCursor jarg1_);
  public final static native void CXType_kind_set(long jarg1, CXType jarg1_, int jarg2);
  public final static native int CXType_kind_get(long jarg1, CXType jarg1_);
  public final static native void CXType_data_set(long jarg1, CXType jarg1_, long jarg2);
  public final static native long CXType_data_get(long jarg1, CXType jarg1_);
  public final static native long new_CXType();
  public final static native void delete_CXType(long jarg1);
  public final static native long getCursorType(long jarg1, CXCursor jarg1_);
  public final static native long getTypeSpelling(long jarg1, CXType jarg1_);
  public final static native long getTypedefDeclUnderlyingType(long jarg1, CXCursor jarg1_);
  public final static native long getEnumDeclIntegerType(long jarg1, CXCursor jarg1_);
  public final static native long getEnumConstantDeclValue(long jarg1, CXCursor jarg1_);
  public final static native java.math.BigInteger getEnumConstantDeclUnsignedValue(long jarg1, CXCursor jarg1_);
  public final static native int getFieldDeclBitWidth(long jarg1, CXCursor jarg1_);
  public final static native int Cursor_getNumArguments(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getArgument(long jarg1, CXCursor jarg1_, long jarg2);
  public final static native long equalTypes(long jarg1, CXType jarg1_, long jarg2, CXType jarg2_);
  public final static native long getCanonicalType(long jarg1, CXType jarg1_);
  public final static native long isConstQualifiedType(long jarg1, CXType jarg1_);
  public final static native long isVolatileQualifiedType(long jarg1, CXType jarg1_);
  public final static native long isRestrictQualifiedType(long jarg1, CXType jarg1_);
  public final static native long getPointeeType(long jarg1, CXType jarg1_);
  public final static native long getTypeDeclaration(long jarg1, CXType jarg1_);
  public final static native long getDeclObjCTypeEncoding(long jarg1, CXCursor jarg1_);
  public final static native long getTypeKindSpelling(int jarg1);
  public final static native int getFunctionTypeCallingConv(long jarg1, CXType jarg1_);
  public final static native long getResultType(long jarg1, CXType jarg1_);
  public final static native int getNumArgTypes(long jarg1, CXType jarg1_);
  public final static native long getArgType(long jarg1, CXType jarg1_, long jarg2);
  public final static native long isFunctionTypeVariadic(long jarg1, CXType jarg1_);
  public final static native long getCursorResultType(long jarg1, CXCursor jarg1_);
  public final static native long isPODType(long jarg1, CXType jarg1_);
  public final static native long getElementType(long jarg1, CXType jarg1_);
  public final static native long getNumElements(long jarg1, CXType jarg1_);
  public final static native long getArrayElementType(long jarg1, CXType jarg1_);
  public final static native long getArraySize(long jarg1, CXType jarg1_);
  public final static native long Type_getAlignOf(long jarg1, CXType jarg1_);
  public final static native long Type_getSizeOf(long jarg1, CXType jarg1_);
  public final static native long Type_getOffsetOf(long jarg1, CXType jarg1_, String jarg2);
  public final static native long Cursor_isBitField(long jarg1, CXCursor jarg1_);
  public final static native long isVirtualBase(long jarg1, CXCursor jarg1_);
  public final static native int getCXXAccessSpecifier(long jarg1, CXCursor jarg1_);
  public final static native long getNumOverloadedDecls(long jarg1, CXCursor jarg1_);
  public final static native long getOverloadedDecl(long jarg1, CXCursor jarg1_, long jarg2);
  public final static native long getIBOutletCollectionType(long jarg1, CXCursor jarg1_);
  public final static native long visitChildren(long jarg1, CXCursor jarg1_, long jarg2, long jarg3);
  public final static native long getCursorUSR(long jarg1, CXCursor jarg1_);
  public final static native long constructUSR_ObjCClass(String jarg1);
  public final static native long constructUSR_ObjCCategory(String jarg1, String jarg2);
  public final static native long constructUSR_ObjCProtocol(String jarg1);
  public final static native long constructUSR_ObjCIvar(String jarg1, long jarg2, CXString jarg2_);
  public final static native long constructUSR_ObjCMethod(String jarg1, long jarg2, long jarg3, CXString jarg3_);
  public final static native long constructUSR_ObjCProperty(String jarg1, long jarg2, CXString jarg2_);
  public final static native long getCursorSpelling(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getSpellingNameRange(long jarg1, CXCursor jarg1_, long jarg2, long jarg3);
  public final static native long getCursorDisplayName(long jarg1, CXCursor jarg1_);
  public final static native long getCursorReferenced(long jarg1, CXCursor jarg1_);
  public final static native long getCursorDefinition(long jarg1, CXCursor jarg1_);
  public final static native long isCursorDefinition(long jarg1, CXCursor jarg1_);
  public final static native long getCanonicalCursor(long jarg1, CXCursor jarg1_);
  public final static native int Cursor_getObjCSelectorIndex(long jarg1, CXCursor jarg1_);
  public final static native int Cursor_isDynamicCall(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getReceiverType(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getObjCPropertyAttributes(long jarg1, CXCursor jarg1_, long jarg2);
  public final static native long Cursor_getObjCDeclQualifiers(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_isVariadic(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getCommentRange(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getRawCommentText(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getBriefCommentText(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getParsedComment(long jarg1, CXCursor jarg1_);
  public final static native long Cursor_getModule(long jarg1, CXCursor jarg1_);
  public final static native long Module_getASTFile(long jarg1);
  public final static native long Module_getParent(long jarg1);
  public final static native long Module_getName(long jarg1);
  public final static native long Module_getFullName(long jarg1);
  public final static native long Module_getNumTopLevelHeaders(long jarg1, long jarg2);
  public final static native long Module_getTopLevelHeader(long jarg1, long jarg2, long jarg3);
  public final static native int Comment_getKind(long jarg1, CXComment jarg1_);
  public final static native long Comment_getNumChildren(long jarg1, CXComment jarg1_);
  public final static native long Comment_getChild(long jarg1, CXComment jarg1_, long jarg2);
  public final static native long Comment_isWhitespace(long jarg1, CXComment jarg1_);
  public final static native long InlineContentComment_hasTrailingNewline(long jarg1, CXComment jarg1_);
  public final static native long TextComment_getText(long jarg1, CXComment jarg1_);
  public final static native long InlineCommandComment_getCommandName(long jarg1, CXComment jarg1_);
  public final static native int InlineCommandComment_getRenderKind(long jarg1, CXComment jarg1_);
  public final static native long InlineCommandComment_getNumArgs(long jarg1, CXComment jarg1_);
  public final static native long InlineCommandComment_getArgText(long jarg1, CXComment jarg1_, long jarg2);
  public final static native long HTMLTagComment_getTagName(long jarg1, CXComment jarg1_);
  public final static native long HTMLStartTagComment_isSelfClosing(long jarg1, CXComment jarg1_);
  public final static native long HTMLStartTag_getNumAttrs(long jarg1, CXComment jarg1_);
  public final static native long HTMLStartTag_getAttrName(long jarg1, CXComment jarg1_, long jarg2);
  public final static native long HTMLStartTag_getAttrValue(long jarg1, CXComment jarg1_, long jarg2);
  public final static native long BlockCommandComment_getCommandName(long jarg1, CXComment jarg1_);
  public final static native long BlockCommandComment_getNumArgs(long jarg1, CXComment jarg1_);
  public final static native long BlockCommandComment_getArgText(long jarg1, CXComment jarg1_, long jarg2);
  public final static native long BlockCommandComment_getParagraph(long jarg1, CXComment jarg1_);
  public final static native long ParamCommandComment_getParamName(long jarg1, CXComment jarg1_);
  public final static native long ParamCommandComment_isParamIndexValid(long jarg1, CXComment jarg1_);
  public final static native long ParamCommandComment_getParamIndex(long jarg1, CXComment jarg1_);
  public final static native long ParamCommandComment_isDirectionExplicit(long jarg1, CXComment jarg1_);
  public final static native int ParamCommandComment_getDirection(long jarg1, CXComment jarg1_);
  public final static native long TParamCommandComment_getParamName(long jarg1, CXComment jarg1_);
  public final static native long TParamCommandComment_isParamPositionValid(long jarg1, CXComment jarg1_);
  public final static native long TParamCommandComment_getDepth(long jarg1, CXComment jarg1_);
  public final static native long TParamCommandComment_getIndex(long jarg1, CXComment jarg1_, long jarg2);
  public final static native long VerbatimBlockLineComment_getText(long jarg1, CXComment jarg1_);
  public final static native long VerbatimLineComment_getText(long jarg1, CXComment jarg1_);
  public final static native long HTMLTagComment_getAsString(long jarg1, CXComment jarg1_);
  public final static native long FullComment_getAsHTML(long jarg1, CXComment jarg1_);
  public final static native long FullComment_getAsXML(long jarg1, CXComment jarg1_);
  public final static native long CXXMethod_isPureVirtual(long jarg1, CXCursor jarg1_);
  public final static native long CXXMethod_isStatic(long jarg1, CXCursor jarg1_);
  public final static native long CXXMethod_isVirtual(long jarg1, CXCursor jarg1_);
  public final static native int getTemplateCursorKind(long jarg1, CXCursor jarg1_);
  public final static native long getSpecializedCursorTemplate(long jarg1, CXCursor jarg1_);
  public final static native long getCursorReferenceNameRange(long jarg1, CXCursor jarg1_, long jarg2, long jarg3);
  public final static native void CXToken_int_data_set(long jarg1, CXToken jarg1_, long jarg2);
  public final static native long CXToken_int_data_get(long jarg1, CXToken jarg1_);
  public final static native void CXToken_ptr_data_set(long jarg1, CXToken jarg1_, long jarg2);
  public final static native long CXToken_ptr_data_get(long jarg1, CXToken jarg1_);
  public final static native long new_CXToken();
  public final static native void delete_CXToken(long jarg1);
  public final static native int getTokenKind(long jarg1, CXToken jarg1_);
  public final static native long getTokenSpelling(long jarg1, long jarg2, CXToken jarg2_);
  public final static native long getTokenLocation(long jarg1, long jarg2, CXToken jarg2_);
  public final static native long getTokenExtent(long jarg1, long jarg2, CXToken jarg2_);
  public final static native void tokenize(long jarg1, long jarg2, CXSourceRange jarg2_, long jarg3, long[] jarg4);
  public final static native void annotateTokens(long jarg1, long jarg2, CXToken jarg2_, long jarg3, long jarg4, CXCursor jarg4_);
  public final static native void disposeTokens(long jarg1, long jarg2, CXToken jarg2_, long jarg3);
  public final static native long getCursorKindSpelling(int jarg1);
  public final static native void getDefinitionSpellingAndExtent(long jarg1, CXCursor jarg1_, long jarg2, long jarg3, long[] jarg4, long[] jarg5, long[] jarg6, long[] jarg7);
  public final static native void enableStackTraces();
  public final static native void executeOnThread(long jarg1, long jarg2, long jarg3);
  public final static native void CXCompletionResult_CursorKind_set(long jarg1, CXCompletionResult jarg1_, int jarg2);
  public final static native int CXCompletionResult_CursorKind_get(long jarg1, CXCompletionResult jarg1_);
  public final static native void CXCompletionResult_CompletionString_set(long jarg1, CXCompletionResult jarg1_, long jarg2);
  public final static native long CXCompletionResult_CompletionString_get(long jarg1, CXCompletionResult jarg1_);
  public final static native long new_CXCompletionResult();
  public final static native void delete_CXCompletionResult(long jarg1);
  public final static native int getCompletionChunkKind(long jarg1, long jarg2);
  public final static native long getCompletionChunkText(long jarg1, long jarg2);
  public final static native long getCompletionChunkCompletionString(long jarg1, long jarg2);
  public final static native long getNumCompletionChunks(long jarg1);
  public final static native long getCompletionPriority(long jarg1);
  public final static native int getCompletionAvailability(long jarg1);
  public final static native long getCompletionNumAnnotations(long jarg1);
  public final static native long getCompletionAnnotation(long jarg1, long jarg2);
  public final static native long getCompletionParent(long jarg1, long jarg2);
  public final static native long getCompletionBriefComment(long jarg1);
  public final static native long getCursorCompletionString(long jarg1, CXCursor jarg1_);
  public final static native void CXCodeCompleteResults_Results_set(long jarg1, CXCodeCompleteResults jarg1_, long jarg2, CXCompletionResult jarg2_);
  public final static native long CXCodeCompleteResults_Results_get(long jarg1, CXCodeCompleteResults jarg1_);
  public final static native void CXCodeCompleteResults_NumResults_set(long jarg1, CXCodeCompleteResults jarg1_, long jarg2);
  public final static native long CXCodeCompleteResults_NumResults_get(long jarg1, CXCodeCompleteResults jarg1_);
  public final static native long new_CXCodeCompleteResults();
  public final static native void delete_CXCodeCompleteResults(long jarg1);
  public final static native long defaultCodeCompleteOptions();
  public final static native long codeCompleteAt(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5, CXUnsavedFile jarg5_, long jarg6, long jarg7);
  public final static native void sortCodeCompletionResults(long jarg1, CXCompletionResult jarg1_, long jarg2);
  public final static native void disposeCodeCompleteResults(long jarg1, CXCodeCompleteResults jarg1_);
  public final static native long codeCompleteGetNumDiagnostics(long jarg1, CXCodeCompleteResults jarg1_);
  public final static native long codeCompleteGetDiagnostic(long jarg1, CXCodeCompleteResults jarg1_, long jarg2);
  public final static native java.math.BigInteger codeCompleteGetContexts(long jarg1, CXCodeCompleteResults jarg1_);
  public final static native int codeCompleteGetContainerKind(long jarg1, CXCodeCompleteResults jarg1_, long[] jarg2);
  public final static native long codeCompleteGetContainerUSR(long jarg1, CXCodeCompleteResults jarg1_);
  public final static native long codeCompleteGetObjCSelector(long jarg1, CXCodeCompleteResults jarg1_);
  public final static native long getClangVersion();
  public final static native void toggleCrashRecovery(long jarg1);
  public final static native void getInclusions(long jarg1, long jarg2, long jarg3);
  public final static native long getRemappings(String jarg1);
  public final static native long getRemappingsFromFileList(long jarg1, long jarg2);
  public final static native long remap_getNumFiles(long jarg1);
  public final static native void remap_getFilenames(long jarg1, long jarg2, long jarg3, CXString jarg3_, long jarg4, CXString jarg4_);
  public final static native void remap_dispose(long jarg1);
  public final static native void CXCursorAndRangeVisitor_context_set(long jarg1, CXCursorAndRangeVisitor jarg1_, long jarg2);
  public final static native long CXCursorAndRangeVisitor_context_get(long jarg1, CXCursorAndRangeVisitor jarg1_);
  public final static native void CXCursorAndRangeVisitor_visit_set(long jarg1, CXCursorAndRangeVisitor jarg1_, long jarg2);
  public final static native long CXCursorAndRangeVisitor_visit_get(long jarg1, CXCursorAndRangeVisitor jarg1_);
  public final static native long new_CXCursorAndRangeVisitor();
  public final static native void delete_CXCursorAndRangeVisitor(long jarg1);
  public final static native int findReferencesInFile(long jarg1, CXCursor jarg1_, long jarg2, long jarg3, CXCursorAndRangeVisitor jarg3_);
  public final static native int findIncludesInFile(long jarg1, long jarg2, long jarg3, CXCursorAndRangeVisitor jarg3_);
  public final static native void CXIdxLoc_ptr_data_set(long jarg1, CXIdxLoc jarg1_, long jarg2);
  public final static native long CXIdxLoc_ptr_data_get(long jarg1, CXIdxLoc jarg1_);
  public final static native void CXIdxLoc_int_data_set(long jarg1, CXIdxLoc jarg1_, long jarg2);
  public final static native long CXIdxLoc_int_data_get(long jarg1, CXIdxLoc jarg1_);
  public final static native long new_CXIdxLoc();
  public final static native void delete_CXIdxLoc(long jarg1);
  public final static native void CXIdxIncludedFileInfo_hashLoc_set(long jarg1, CXIdxIncludedFileInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxIncludedFileInfo_hashLoc_get(long jarg1, CXIdxIncludedFileInfo jarg1_);
  public final static native void CXIdxIncludedFileInfo_filename_set(long jarg1, CXIdxIncludedFileInfo jarg1_, String jarg2);
  public final static native String CXIdxIncludedFileInfo_filename_get(long jarg1, CXIdxIncludedFileInfo jarg1_);
  public final static native void CXIdxIncludedFileInfo_file_set(long jarg1, CXIdxIncludedFileInfo jarg1_, long jarg2);
  public final static native long CXIdxIncludedFileInfo_file_get(long jarg1, CXIdxIncludedFileInfo jarg1_);
  public final static native void CXIdxIncludedFileInfo_isImport_set(long jarg1, CXIdxIncludedFileInfo jarg1_, int jarg2);
  public final static native int CXIdxIncludedFileInfo_isImport_get(long jarg1, CXIdxIncludedFileInfo jarg1_);
  public final static native void CXIdxIncludedFileInfo_isAngled_set(long jarg1, CXIdxIncludedFileInfo jarg1_, int jarg2);
  public final static native int CXIdxIncludedFileInfo_isAngled_get(long jarg1, CXIdxIncludedFileInfo jarg1_);
  public final static native void CXIdxIncludedFileInfo_isModuleImport_set(long jarg1, CXIdxIncludedFileInfo jarg1_, int jarg2);
  public final static native int CXIdxIncludedFileInfo_isModuleImport_get(long jarg1, CXIdxIncludedFileInfo jarg1_);
  public final static native long new_CXIdxIncludedFileInfo();
  public final static native void delete_CXIdxIncludedFileInfo(long jarg1);
  public final static native void CXIdxImportedASTFileInfo_file_set(long jarg1, CXIdxImportedASTFileInfo jarg1_, long jarg2);
  public final static native long CXIdxImportedASTFileInfo_file_get(long jarg1, CXIdxImportedASTFileInfo jarg1_);
  public final static native void CXIdxImportedASTFileInfo_module_set(long jarg1, CXIdxImportedASTFileInfo jarg1_, long jarg2);
  public final static native long CXIdxImportedASTFileInfo_module_get(long jarg1, CXIdxImportedASTFileInfo jarg1_);
  public final static native void CXIdxImportedASTFileInfo_loc_set(long jarg1, CXIdxImportedASTFileInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxImportedASTFileInfo_loc_get(long jarg1, CXIdxImportedASTFileInfo jarg1_);
  public final static native void CXIdxImportedASTFileInfo_isImplicit_set(long jarg1, CXIdxImportedASTFileInfo jarg1_, int jarg2);
  public final static native int CXIdxImportedASTFileInfo_isImplicit_get(long jarg1, CXIdxImportedASTFileInfo jarg1_);
  public final static native long new_CXIdxImportedASTFileInfo();
  public final static native void delete_CXIdxImportedASTFileInfo(long jarg1);
  public final static native void CXIdxAttrInfo_kind_set(long jarg1, CXIdxAttrInfo jarg1_, int jarg2);
  public final static native int CXIdxAttrInfo_kind_get(long jarg1, CXIdxAttrInfo jarg1_);
  public final static native void CXIdxAttrInfo_cursor_set(long jarg1, CXIdxAttrInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxAttrInfo_cursor_get(long jarg1, CXIdxAttrInfo jarg1_);
  public final static native void CXIdxAttrInfo_loc_set(long jarg1, CXIdxAttrInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxAttrInfo_loc_get(long jarg1, CXIdxAttrInfo jarg1_);
  public final static native long new_CXIdxAttrInfo();
  public final static native void delete_CXIdxAttrInfo(long jarg1);
  public final static native void CXIdxEntityInfo_kind_set(long jarg1, CXIdxEntityInfo jarg1_, int jarg2);
  public final static native int CXIdxEntityInfo_kind_get(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native void CXIdxEntityInfo_templateKind_set(long jarg1, CXIdxEntityInfo jarg1_, int jarg2);
  public final static native int CXIdxEntityInfo_templateKind_get(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native void CXIdxEntityInfo_lang_set(long jarg1, CXIdxEntityInfo jarg1_, int jarg2);
  public final static native int CXIdxEntityInfo_lang_get(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native void CXIdxEntityInfo_name_set(long jarg1, CXIdxEntityInfo jarg1_, String jarg2);
  public final static native String CXIdxEntityInfo_name_get(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native void CXIdxEntityInfo_USR_set(long jarg1, CXIdxEntityInfo jarg1_, String jarg2);
  public final static native String CXIdxEntityInfo_USR_get(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native void CXIdxEntityInfo_cursor_set(long jarg1, CXIdxEntityInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxEntityInfo_cursor_get(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native void CXIdxEntityInfo_attributes_set(long jarg1, CXIdxEntityInfo jarg1_, long jarg2);
  public final static native long CXIdxEntityInfo_attributes_get(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native void CXIdxEntityInfo_numAttributes_set(long jarg1, CXIdxEntityInfo jarg1_, long jarg2);
  public final static native long CXIdxEntityInfo_numAttributes_get(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native long new_CXIdxEntityInfo();
  public final static native void delete_CXIdxEntityInfo(long jarg1);
  public final static native void CXIdxContainerInfo_cursor_set(long jarg1, CXIdxContainerInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxContainerInfo_cursor_get(long jarg1, CXIdxContainerInfo jarg1_);
  public final static native long new_CXIdxContainerInfo();
  public final static native void delete_CXIdxContainerInfo(long jarg1);
  public final static native void CXIdxIBOutletCollectionAttrInfo_attrInfo_set(long jarg1, CXIdxIBOutletCollectionAttrInfo jarg1_, long jarg2, CXIdxAttrInfo jarg2_);
  public final static native long CXIdxIBOutletCollectionAttrInfo_attrInfo_get(long jarg1, CXIdxIBOutletCollectionAttrInfo jarg1_);
  public final static native void CXIdxIBOutletCollectionAttrInfo_objcClass_set(long jarg1, CXIdxIBOutletCollectionAttrInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxIBOutletCollectionAttrInfo_objcClass_get(long jarg1, CXIdxIBOutletCollectionAttrInfo jarg1_);
  public final static native void CXIdxIBOutletCollectionAttrInfo_classCursor_set(long jarg1, CXIdxIBOutletCollectionAttrInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxIBOutletCollectionAttrInfo_classCursor_get(long jarg1, CXIdxIBOutletCollectionAttrInfo jarg1_);
  public final static native void CXIdxIBOutletCollectionAttrInfo_classLoc_set(long jarg1, CXIdxIBOutletCollectionAttrInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxIBOutletCollectionAttrInfo_classLoc_get(long jarg1, CXIdxIBOutletCollectionAttrInfo jarg1_);
  public final static native long new_CXIdxIBOutletCollectionAttrInfo();
  public final static native void delete_CXIdxIBOutletCollectionAttrInfo(long jarg1);
  public final static native void CXIdxDeclInfo_entityInfo_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxDeclInfo_entityInfo_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_cursor_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxDeclInfo_cursor_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_loc_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxDeclInfo_loc_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_semanticContainer_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2, CXIdxContainerInfo jarg2_);
  public final static native long CXIdxDeclInfo_semanticContainer_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_lexicalContainer_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2, CXIdxContainerInfo jarg2_);
  public final static native long CXIdxDeclInfo_lexicalContainer_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_isRedeclaration_set(long jarg1, CXIdxDeclInfo jarg1_, int jarg2);
  public final static native int CXIdxDeclInfo_isRedeclaration_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_isDefinition_set(long jarg1, CXIdxDeclInfo jarg1_, int jarg2);
  public final static native int CXIdxDeclInfo_isDefinition_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_isContainer_set(long jarg1, CXIdxDeclInfo jarg1_, int jarg2);
  public final static native int CXIdxDeclInfo_isContainer_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_declAsContainer_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2, CXIdxContainerInfo jarg2_);
  public final static native long CXIdxDeclInfo_declAsContainer_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_isImplicit_set(long jarg1, CXIdxDeclInfo jarg1_, int jarg2);
  public final static native int CXIdxDeclInfo_isImplicit_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_attributes_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2);
  public final static native long CXIdxDeclInfo_attributes_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_numAttributes_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2);
  public final static native long CXIdxDeclInfo_numAttributes_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native void CXIdxDeclInfo_flags_set(long jarg1, CXIdxDeclInfo jarg1_, long jarg2);
  public final static native long CXIdxDeclInfo_flags_get(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native long new_CXIdxDeclInfo();
  public final static native void delete_CXIdxDeclInfo(long jarg1);
  public final static native void CXIdxObjCContainerDeclInfo_declInfo_set(long jarg1, CXIdxObjCContainerDeclInfo jarg1_, long jarg2, CXIdxDeclInfo jarg2_);
  public final static native long CXIdxObjCContainerDeclInfo_declInfo_get(long jarg1, CXIdxObjCContainerDeclInfo jarg1_);
  public final static native void CXIdxObjCContainerDeclInfo_kind_set(long jarg1, CXIdxObjCContainerDeclInfo jarg1_, int jarg2);
  public final static native int CXIdxObjCContainerDeclInfo_kind_get(long jarg1, CXIdxObjCContainerDeclInfo jarg1_);
  public final static native long new_CXIdxObjCContainerDeclInfo();
  public final static native void delete_CXIdxObjCContainerDeclInfo(long jarg1);
  public final static native void CXIdxBaseClassInfo_base_set(long jarg1, CXIdxBaseClassInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxBaseClassInfo_base_get(long jarg1, CXIdxBaseClassInfo jarg1_);
  public final static native void CXIdxBaseClassInfo_cursor_set(long jarg1, CXIdxBaseClassInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxBaseClassInfo_cursor_get(long jarg1, CXIdxBaseClassInfo jarg1_);
  public final static native void CXIdxBaseClassInfo_loc_set(long jarg1, CXIdxBaseClassInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxBaseClassInfo_loc_get(long jarg1, CXIdxBaseClassInfo jarg1_);
  public final static native long new_CXIdxBaseClassInfo();
  public final static native void delete_CXIdxBaseClassInfo(long jarg1);
  public final static native void CXIdxObjCProtocolRefInfo_protocol_set(long jarg1, CXIdxObjCProtocolRefInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxObjCProtocolRefInfo_protocol_get(long jarg1, CXIdxObjCProtocolRefInfo jarg1_);
  public final static native void CXIdxObjCProtocolRefInfo_cursor_set(long jarg1, CXIdxObjCProtocolRefInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxObjCProtocolRefInfo_cursor_get(long jarg1, CXIdxObjCProtocolRefInfo jarg1_);
  public final static native void CXIdxObjCProtocolRefInfo_loc_set(long jarg1, CXIdxObjCProtocolRefInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxObjCProtocolRefInfo_loc_get(long jarg1, CXIdxObjCProtocolRefInfo jarg1_);
  public final static native long new_CXIdxObjCProtocolRefInfo();
  public final static native void delete_CXIdxObjCProtocolRefInfo(long jarg1);
  public final static native void CXIdxObjCProtocolRefListInfo_protocols_set(long jarg1, CXIdxObjCProtocolRefListInfo jarg1_, long jarg2);
  public final static native long CXIdxObjCProtocolRefListInfo_protocols_get(long jarg1, CXIdxObjCProtocolRefListInfo jarg1_);
  public final static native void CXIdxObjCProtocolRefListInfo_numProtocols_set(long jarg1, CXIdxObjCProtocolRefListInfo jarg1_, long jarg2);
  public final static native long CXIdxObjCProtocolRefListInfo_numProtocols_get(long jarg1, CXIdxObjCProtocolRefListInfo jarg1_);
  public final static native long new_CXIdxObjCProtocolRefListInfo();
  public final static native void delete_CXIdxObjCProtocolRefListInfo(long jarg1);
  public final static native void CXIdxObjCInterfaceDeclInfo_containerInfo_set(long jarg1, CXIdxObjCInterfaceDeclInfo jarg1_, long jarg2, CXIdxObjCContainerDeclInfo jarg2_);
  public final static native long CXIdxObjCInterfaceDeclInfo_containerInfo_get(long jarg1, CXIdxObjCInterfaceDeclInfo jarg1_);
  public final static native void CXIdxObjCInterfaceDeclInfo_superInfo_set(long jarg1, CXIdxObjCInterfaceDeclInfo jarg1_, long jarg2, CXIdxBaseClassInfo jarg2_);
  public final static native long CXIdxObjCInterfaceDeclInfo_superInfo_get(long jarg1, CXIdxObjCInterfaceDeclInfo jarg1_);
  public final static native void CXIdxObjCInterfaceDeclInfo_protocols_set(long jarg1, CXIdxObjCInterfaceDeclInfo jarg1_, long jarg2, CXIdxObjCProtocolRefListInfo jarg2_);
  public final static native long CXIdxObjCInterfaceDeclInfo_protocols_get(long jarg1, CXIdxObjCInterfaceDeclInfo jarg1_);
  public final static native long new_CXIdxObjCInterfaceDeclInfo();
  public final static native void delete_CXIdxObjCInterfaceDeclInfo(long jarg1);
  public final static native void CXIdxObjCCategoryDeclInfo_containerInfo_set(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_, long jarg2, CXIdxObjCContainerDeclInfo jarg2_);
  public final static native long CXIdxObjCCategoryDeclInfo_containerInfo_get(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_);
  public final static native void CXIdxObjCCategoryDeclInfo_objcClass_set(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxObjCCategoryDeclInfo_objcClass_get(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_);
  public final static native void CXIdxObjCCategoryDeclInfo_classCursor_set(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxObjCCategoryDeclInfo_classCursor_get(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_);
  public final static native void CXIdxObjCCategoryDeclInfo_classLoc_set(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxObjCCategoryDeclInfo_classLoc_get(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_);
  public final static native void CXIdxObjCCategoryDeclInfo_protocols_set(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_, long jarg2, CXIdxObjCProtocolRefListInfo jarg2_);
  public final static native long CXIdxObjCCategoryDeclInfo_protocols_get(long jarg1, CXIdxObjCCategoryDeclInfo jarg1_);
  public final static native long new_CXIdxObjCCategoryDeclInfo();
  public final static native void delete_CXIdxObjCCategoryDeclInfo(long jarg1);
  public final static native void CXIdxObjCPropertyDeclInfo_declInfo_set(long jarg1, CXIdxObjCPropertyDeclInfo jarg1_, long jarg2, CXIdxDeclInfo jarg2_);
  public final static native long CXIdxObjCPropertyDeclInfo_declInfo_get(long jarg1, CXIdxObjCPropertyDeclInfo jarg1_);
  public final static native void CXIdxObjCPropertyDeclInfo_getter_set(long jarg1, CXIdxObjCPropertyDeclInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxObjCPropertyDeclInfo_getter_get(long jarg1, CXIdxObjCPropertyDeclInfo jarg1_);
  public final static native void CXIdxObjCPropertyDeclInfo_setter_set(long jarg1, CXIdxObjCPropertyDeclInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxObjCPropertyDeclInfo_setter_get(long jarg1, CXIdxObjCPropertyDeclInfo jarg1_);
  public final static native long new_CXIdxObjCPropertyDeclInfo();
  public final static native void delete_CXIdxObjCPropertyDeclInfo(long jarg1);
  public final static native void CXIdxCXXClassDeclInfo_declInfo_set(long jarg1, CXIdxCXXClassDeclInfo jarg1_, long jarg2, CXIdxDeclInfo jarg2_);
  public final static native long CXIdxCXXClassDeclInfo_declInfo_get(long jarg1, CXIdxCXXClassDeclInfo jarg1_);
  public final static native void CXIdxCXXClassDeclInfo_bases_set(long jarg1, CXIdxCXXClassDeclInfo jarg1_, long jarg2);
  public final static native long CXIdxCXXClassDeclInfo_bases_get(long jarg1, CXIdxCXXClassDeclInfo jarg1_);
  public final static native void CXIdxCXXClassDeclInfo_numBases_set(long jarg1, CXIdxCXXClassDeclInfo jarg1_, long jarg2);
  public final static native long CXIdxCXXClassDeclInfo_numBases_get(long jarg1, CXIdxCXXClassDeclInfo jarg1_);
  public final static native long new_CXIdxCXXClassDeclInfo();
  public final static native void delete_CXIdxCXXClassDeclInfo(long jarg1);
  public final static native void CXIdxEntityRefInfo_kind_set(long jarg1, CXIdxEntityRefInfo jarg1_, int jarg2);
  public final static native int CXIdxEntityRefInfo_kind_get(long jarg1, CXIdxEntityRefInfo jarg1_);
  public final static native void CXIdxEntityRefInfo_cursor_set(long jarg1, CXIdxEntityRefInfo jarg1_, long jarg2, CXCursor jarg2_);
  public final static native long CXIdxEntityRefInfo_cursor_get(long jarg1, CXIdxEntityRefInfo jarg1_);
  public final static native void CXIdxEntityRefInfo_loc_set(long jarg1, CXIdxEntityRefInfo jarg1_, long jarg2, CXIdxLoc jarg2_);
  public final static native long CXIdxEntityRefInfo_loc_get(long jarg1, CXIdxEntityRefInfo jarg1_);
  public final static native void CXIdxEntityRefInfo_referencedEntity_set(long jarg1, CXIdxEntityRefInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxEntityRefInfo_referencedEntity_get(long jarg1, CXIdxEntityRefInfo jarg1_);
  public final static native void CXIdxEntityRefInfo_parentEntity_set(long jarg1, CXIdxEntityRefInfo jarg1_, long jarg2, CXIdxEntityInfo jarg2_);
  public final static native long CXIdxEntityRefInfo_parentEntity_get(long jarg1, CXIdxEntityRefInfo jarg1_);
  public final static native void CXIdxEntityRefInfo_container_set(long jarg1, CXIdxEntityRefInfo jarg1_, long jarg2, CXIdxContainerInfo jarg2_);
  public final static native long CXIdxEntityRefInfo_container_get(long jarg1, CXIdxEntityRefInfo jarg1_);
  public final static native long new_CXIdxEntityRefInfo();
  public final static native void delete_CXIdxEntityRefInfo(long jarg1);
  public final static native void IndexerCallbacks_abortQuery_set(long jarg1, IndexerCallbacks jarg1_, long jarg2);
  public final static native long IndexerCallbacks_abortQuery_get(long jarg1, IndexerCallbacks jarg1_);
  public final static native void IndexerCallbacks_diagnostic_set(long jarg1, IndexerCallbacks jarg1_, long jarg2);
  public final static native long IndexerCallbacks_diagnostic_get(long jarg1, IndexerCallbacks jarg1_);
  public final static native void IndexerCallbacks_enteredMainFile_set(long jarg1, IndexerCallbacks jarg1_, long jarg2);
  public final static native long IndexerCallbacks_enteredMainFile_get(long jarg1, IndexerCallbacks jarg1_);
  public final static native void IndexerCallbacks_ppIncludedFile_set(long jarg1, IndexerCallbacks jarg1_, long jarg2);
  public final static native long IndexerCallbacks_ppIncludedFile_get(long jarg1, IndexerCallbacks jarg1_);
  public final static native void IndexerCallbacks_importedASTFile_set(long jarg1, IndexerCallbacks jarg1_, long jarg2);
  public final static native long IndexerCallbacks_importedASTFile_get(long jarg1, IndexerCallbacks jarg1_);
  public final static native void IndexerCallbacks_startedTranslationUnit_set(long jarg1, IndexerCallbacks jarg1_, long jarg2);
  public final static native long IndexerCallbacks_startedTranslationUnit_get(long jarg1, IndexerCallbacks jarg1_);
  public final static native void IndexerCallbacks_indexDeclaration_set(long jarg1, IndexerCallbacks jarg1_, long jarg2);
  public final static native long IndexerCallbacks_indexDeclaration_get(long jarg1, IndexerCallbacks jarg1_);
  public final static native void IndexerCallbacks_indexEntityReference_set(long jarg1, IndexerCallbacks jarg1_, long jarg2);
  public final static native long IndexerCallbacks_indexEntityReference_get(long jarg1, IndexerCallbacks jarg1_);
  public final static native long new_IndexerCallbacks();
  public final static native void delete_IndexerCallbacks(long jarg1);
  public final static native int index_isEntityObjCContainerKind(int jarg1);
  public final static native long index_getObjCContainerDeclInfo(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native long index_getObjCInterfaceDeclInfo(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native long index_getObjCCategoryDeclInfo(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native long index_getObjCProtocolRefListInfo(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native long index_getObjCPropertyDeclInfo(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native long index_getIBOutletCollectionAttrInfo(long jarg1, CXIdxAttrInfo jarg1_);
  public final static native long index_getCXXClassDeclInfo(long jarg1, CXIdxDeclInfo jarg1_);
  public final static native long index_getClientContainer(long jarg1, CXIdxContainerInfo jarg1_);
  public final static native void index_setClientContainer(long jarg1, CXIdxContainerInfo jarg1_, long jarg2);
  public final static native long index_getClientEntity(long jarg1, CXIdxEntityInfo jarg1_);
  public final static native void index_setClientEntity(long jarg1, CXIdxEntityInfo jarg1_, long jarg2);
  public final static native long IndexAction_create(long jarg1);
  public final static native void IndexAction_dispose(long jarg1);
  public final static native int indexSourceFile(long jarg1, long jarg2, long jarg3, IndexerCallbacks jarg3_, long jarg4, long jarg5, String jarg6, String[] jarg7, int jarg8, long jarg9, CXUnsavedFile jarg9_, long jarg10, long jarg11, long jarg12);
  public final static native int indexTranslationUnit(long jarg1, long jarg2, long jarg3, IndexerCallbacks jarg3_, long jarg4, long jarg5, long jarg6);
  public final static native void indexLoc_getFileLocation(long jarg1, CXIdxLoc jarg1_, long jarg2, long jarg3, long[] jarg4, long[] jarg5, long[] jarg6);
  public final static native long indexLoc_getCXSourceLocation(long jarg1, CXIdxLoc jarg1_);
  public final static native long CompilationDatabase_fromDirectory(String jarg1, long jarg2);
  public final static native void CompilationDatabase_dispose(long jarg1);
  public final static native long CompilationDatabase_getCompileCommands(long jarg1, String jarg2);
  public final static native long CompilationDatabase_getAllCompileCommands(long jarg1);
  public final static native void CompileCommands_dispose(long jarg1);
  public final static native long CompileCommands_getSize(long jarg1);
  public final static native long CompileCommands_getCommand(long jarg1, long jarg2);
  public final static native long CompileCommand_getDirectory(long jarg1);
  public final static native long CompileCommand_getNumArgs(long jarg1);
  public final static native long CompileCommand_getArg(long jarg1, long jarg2);
}
