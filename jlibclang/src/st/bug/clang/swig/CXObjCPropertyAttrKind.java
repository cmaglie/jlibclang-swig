/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package st.bug.clang.swig;

public enum CXObjCPropertyAttrKind {
  CXObjCPropertyAttr_noattr(0x00),
  CXObjCPropertyAttr_readonly(0x01),
  CXObjCPropertyAttr_getter(0x02),
  CXObjCPropertyAttr_assign(0x04),
  CXObjCPropertyAttr_readwrite(0x08),
  CXObjCPropertyAttr_retain(0x10),
  CXObjCPropertyAttr_copy(0x20),
  CXObjCPropertyAttr_nonatomic(0x40),
  CXObjCPropertyAttr_setter(0x80),
  CXObjCPropertyAttr_atomic(0x100),
  CXObjCPropertyAttr_weak(0x200),
  CXObjCPropertyAttr_strong(0x400),
  CXObjCPropertyAttr_unsafe_unretained(0x800);

  public final int swigValue() {
    return swigValue;
  }

  public static CXObjCPropertyAttrKind swigToEnum(int swigValue) {
    CXObjCPropertyAttrKind[] swigValues = CXObjCPropertyAttrKind.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (CXObjCPropertyAttrKind swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + CXObjCPropertyAttrKind.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private CXObjCPropertyAttrKind() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private CXObjCPropertyAttrKind(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private CXObjCPropertyAttrKind(CXObjCPropertyAttrKind swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

