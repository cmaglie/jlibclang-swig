/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package st.bug.clang.swig;

public enum CXTypeKind {
  CXType_Invalid(0),
  CXType_Unexposed(1),
  CXType_Void(2),
  CXType_Bool(3),
  CXType_Char_U(4),
  CXType_UChar(5),
  CXType_Char16(6),
  CXType_Char32(7),
  CXType_UShort(8),
  CXType_UInt(9),
  CXType_ULong(10),
  CXType_ULongLong(11),
  CXType_UInt128(12),
  CXType_Char_S(13),
  CXType_SChar(14),
  CXType_WChar(15),
  CXType_Short(16),
  CXType_Int(17),
  CXType_Long(18),
  CXType_LongLong(19),
  CXType_Int128(20),
  CXType_Float(21),
  CXType_Double(22),
  CXType_LongDouble(23),
  CXType_NullPtr(24),
  CXType_Overload(25),
  CXType_Dependent(26),
  CXType_ObjCId(27),
  CXType_ObjCClass(28),
  CXType_ObjCSel(29),
  CXType_FirstBuiltin(CXType_Void),
  CXType_LastBuiltin(CXType_ObjCSel),
  CXType_Complex(100),
  CXType_Pointer(101),
  CXType_BlockPointer(102),
  CXType_LValueReference(103),
  CXType_RValueReference(104),
  CXType_Record(105),
  CXType_Enum(106),
  CXType_Typedef(107),
  CXType_ObjCInterface(108),
  CXType_ObjCObjectPointer(109),
  CXType_FunctionNoProto(110),
  CXType_FunctionProto(111),
  CXType_ConstantArray(112),
  CXType_Vector(113),
  CXType_IncompleteArray(114),
  CXType_VariableArray(115),
  CXType_DependentSizedArray(116),
  CXType_MemberPointer(117);

  public final int swigValue() {
    return swigValue;
  }

  public static CXTypeKind swigToEnum(int swigValue) {
    CXTypeKind[] swigValues = CXTypeKind.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (CXTypeKind swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + CXTypeKind.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private CXTypeKind() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private CXTypeKind(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private CXTypeKind(CXTypeKind swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

