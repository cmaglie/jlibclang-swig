/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package st.bug.clang.swig;

public class clangjava implements clangjavaConstants {
  public static CXCompletionResult new_CXCompletionResultArray(int nelements) {
    long cPtr = clangjavaJNI.new_CXCompletionResultArray(nelements);
    return (cPtr == 0) ? null : new CXCompletionResult(cPtr, false);
  }

  public static void delete_CXCompletionResultArray(CXCompletionResult ary) {
    clangjavaJNI.delete_CXCompletionResultArray(CXCompletionResult.getCPtr(ary), ary);
  }

  public static CXCompletionResult CXCompletionResultArray_getitem(CXCompletionResult ary, int index) {
    return new CXCompletionResult(clangjavaJNI.CXCompletionResultArray_getitem(CXCompletionResult.getCPtr(ary), ary, index), true);
  }

  public static void CXCompletionResultArray_setitem(CXCompletionResult ary, int index, CXCompletionResult value) {
    clangjavaJNI.CXCompletionResultArray_setitem(CXCompletionResult.getCPtr(ary), ary, index, CXCompletionResult.getCPtr(value), value);
  }

  public static CXPlatformAvailability new_CXPlatformAvailabilityArray(int nelements) {
    long cPtr = clangjavaJNI.new_CXPlatformAvailabilityArray(nelements);
    return (cPtr == 0) ? null : new CXPlatformAvailability(cPtr, false);
  }

  public static void delete_CXPlatformAvailabilityArray(CXPlatformAvailability ary) {
    clangjavaJNI.delete_CXPlatformAvailabilityArray(CXPlatformAvailability.getCPtr(ary), ary);
  }

  public static CXPlatformAvailability CXPlatformAvailabilityArray_getitem(CXPlatformAvailability ary, int index) {
    return new CXPlatformAvailability(clangjavaJNI.CXPlatformAvailabilityArray_getitem(CXPlatformAvailability.getCPtr(ary), ary, index), true);
  }

  public static void CXPlatformAvailabilityArray_setitem(CXPlatformAvailability ary, int index, CXPlatformAvailability value) {
    clangjavaJNI.CXPlatformAvailabilityArray_setitem(CXPlatformAvailability.getCPtr(ary), ary, index, CXPlatformAvailability.getCPtr(value), value);
  }

  public static CXCursor new_CXCursorArray(int nelements) {
    long cPtr = clangjavaJNI.new_CXCursorArray(nelements);
    return (cPtr == 0) ? null : new CXCursor(cPtr, false);
  }

  public static void delete_CXCursorArray(CXCursor ary) {
    clangjavaJNI.delete_CXCursorArray(CXCursor.getCPtr(ary), ary);
  }

  public static CXCursor CXCursorArray_getitem(CXCursor ary, int index) {
    return new CXCursor(clangjavaJNI.CXCursorArray_getitem(CXCursor.getCPtr(ary), ary, index), true);
  }

  public static void CXCursorArray_setitem(CXCursor ary, int index, CXCursor value) {
    clangjavaJNI.CXCursorArray_setitem(CXCursor.getCPtr(ary), ary, index, CXCursor.getCPtr(value), value);
  }

  public static SWIGTYPE_p_p_CXCursor new_CXCursor_p_p() {
    long cPtr = clangjavaJNI.new_CXCursor_p_p();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_CXCursor(cPtr, false);
  }

  public static SWIGTYPE_p_p_CXCursor copy_CXCursor_p_p(CXCursor value) {
    long cPtr = clangjavaJNI.copy_CXCursor_p_p(CXCursor.getCPtr(value), value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_CXCursor(cPtr, false);
  }

  public static void delete_CXCursor_p_p(SWIGTYPE_p_p_CXCursor obj) {
    clangjavaJNI.delete_CXCursor_p_p(SWIGTYPE_p_p_CXCursor.getCPtr(obj));
  }

  public static void CXCursor_p_p_assign(SWIGTYPE_p_p_CXCursor obj, CXCursor value) {
    clangjavaJNI.CXCursor_p_p_assign(SWIGTYPE_p_p_CXCursor.getCPtr(obj), CXCursor.getCPtr(value), value);
  }

  public static CXCursor CXCursor_p_p_value(SWIGTYPE_p_p_CXCursor obj) {
    long cPtr = clangjavaJNI.CXCursor_p_p_value(SWIGTYPE_p_p_CXCursor.getCPtr(obj));
    return (cPtr == 0) ? null : new CXCursor(cPtr, false);
  }

  public static String getCString(CXString string) {
    return clangjavaJNI.getCString(CXString.getCPtr(string), string);
  }

  public static void disposeString(CXString string) {
    clangjavaJNI.disposeString(CXString.getCPtr(string), string);
  }

  public static SWIGTYPE_p_void createIndex(int excludeDeclarationsFromPCH, int displayDiagnostics) {
    long cPtr = clangjavaJNI.createIndex(excludeDeclarationsFromPCH, displayDiagnostics);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void disposeIndex(SWIGTYPE_p_void index) {
    clangjavaJNI.disposeIndex(SWIGTYPE_p_void.getCPtr(index));
  }

  public static void CXIndex_setGlobalOptions(SWIGTYPE_p_void arg0, long options) {
    clangjavaJNI.CXIndex_setGlobalOptions(SWIGTYPE_p_void.getCPtr(arg0), options);
  }

  public static long CXIndex_getGlobalOptions(SWIGTYPE_p_void arg0) {
    return clangjavaJNI.CXIndex_getGlobalOptions(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static CXString getFileName(SWIGTYPE_p_void SFile) {
    return new CXString(clangjavaJNI.getFileName(SWIGTYPE_p_void.getCPtr(SFile)), true);
  }

  public static long getFileTime(SWIGTYPE_p_void SFile) {
    return clangjavaJNI.getFileTime(SWIGTYPE_p_void.getCPtr(SFile));
  }

  public static int getFileUniqueID(SWIGTYPE_p_void file, CXFileUniqueID outID) {
    return clangjavaJNI.getFileUniqueID(SWIGTYPE_p_void.getCPtr(file), CXFileUniqueID.getCPtr(outID), outID);
  }

  public static long isFileMultipleIncludeGuarded(SWIGTYPE_p_CXTranslationUnitImpl tu, SWIGTYPE_p_void file) {
    return clangjavaJNI.isFileMultipleIncludeGuarded(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(tu), SWIGTYPE_p_void.getCPtr(file));
  }

  public static SWIGTYPE_p_void getFile(SWIGTYPE_p_CXTranslationUnitImpl tu, String file_name) {
    long cPtr = clangjavaJNI.getFile(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(tu), file_name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static CXSourceLocation getNullLocation() {
    return new CXSourceLocation(clangjavaJNI.getNullLocation(), true);
  }

  public static long equalLocations(CXSourceLocation loc1, CXSourceLocation loc2) {
    return clangjavaJNI.equalLocations(CXSourceLocation.getCPtr(loc1), loc1, CXSourceLocation.getCPtr(loc2), loc2);
  }

  public static CXSourceLocation getLocation(SWIGTYPE_p_CXTranslationUnitImpl tu, SWIGTYPE_p_void file, long line, long column) {
    return new CXSourceLocation(clangjavaJNI.getLocation(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(tu), SWIGTYPE_p_void.getCPtr(file), line, column), true);
  }

  public static CXSourceLocation getLocationForOffset(SWIGTYPE_p_CXTranslationUnitImpl tu, SWIGTYPE_p_void file, long offset) {
    return new CXSourceLocation(clangjavaJNI.getLocationForOffset(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(tu), SWIGTYPE_p_void.getCPtr(file), offset), true);
  }

  public static int Location_isInSystemHeader(CXSourceLocation location) {
    return clangjavaJNI.Location_isInSystemHeader(CXSourceLocation.getCPtr(location), location);
  }

  public static CXSourceRange getNullRange() {
    return new CXSourceRange(clangjavaJNI.getNullRange(), true);
  }

  public static CXSourceRange getRange(CXSourceLocation begin, CXSourceLocation end) {
    return new CXSourceRange(clangjavaJNI.getRange(CXSourceLocation.getCPtr(begin), begin, CXSourceLocation.getCPtr(end), end), true);
  }

  public static long equalRanges(CXSourceRange range1, CXSourceRange range2) {
    return clangjavaJNI.equalRanges(CXSourceRange.getCPtr(range1), range1, CXSourceRange.getCPtr(range2), range2);
  }

  public static int Range_isNull(CXSourceRange range) {
    return clangjavaJNI.Range_isNull(CXSourceRange.getCPtr(range), range);
  }

  public static void getExpansionLocation(CXSourceLocation location, SWIGTYPE_p_p_void file, long[] line, long[] column, long[] offset) {
    clangjavaJNI.getExpansionLocation(CXSourceLocation.getCPtr(location), location, SWIGTYPE_p_p_void.getCPtr(file), line, column, offset);
  }

  public static void getPresumedLocation(CXSourceLocation location, CXString filename, long[] line, long[] column) {
    clangjavaJNI.getPresumedLocation(CXSourceLocation.getCPtr(location), location, CXString.getCPtr(filename), filename, line, column);
  }

  public static void getInstantiationLocation(CXSourceLocation location, SWIGTYPE_p_p_void file, long[] line, long[] column, long[] offset) {
    clangjavaJNI.getInstantiationLocation(CXSourceLocation.getCPtr(location), location, SWIGTYPE_p_p_void.getCPtr(file), line, column, offset);
  }

  public static void getSpellingLocation(CXSourceLocation location, SWIGTYPE_p_p_void file, long[] line, long[] column, long[] offset) {
    clangjavaJNI.getSpellingLocation(CXSourceLocation.getCPtr(location), location, SWIGTYPE_p_p_void.getCPtr(file), line, column, offset);
  }

  public static void getFileLocation(CXSourceLocation location, SWIGTYPE_p_p_void file, long[] line, long[] column, long[] offset) {
    clangjavaJNI.getFileLocation(CXSourceLocation.getCPtr(location), location, SWIGTYPE_p_p_void.getCPtr(file), line, column, offset);
  }

  public static CXSourceLocation getRangeStart(CXSourceRange range) {
    return new CXSourceLocation(clangjavaJNI.getRangeStart(CXSourceRange.getCPtr(range), range), true);
  }

  public static CXSourceLocation getRangeEnd(CXSourceRange range) {
    return new CXSourceLocation(clangjavaJNI.getRangeEnd(CXSourceRange.getCPtr(range), range), true);
  }

  public static long getNumDiagnosticsInSet(SWIGTYPE_p_void Diags) {
    return clangjavaJNI.getNumDiagnosticsInSet(SWIGTYPE_p_void.getCPtr(Diags));
  }

  public static SWIGTYPE_p_void getDiagnosticInSet(SWIGTYPE_p_void Diags, long Index) {
    long cPtr = clangjavaJNI.getDiagnosticInSet(SWIGTYPE_p_void.getCPtr(Diags), Index);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void loadDiagnostics(String file, SWIGTYPE_p_CXLoadDiag_Error error, CXString errorString) {
    long cPtr = clangjavaJNI.loadDiagnostics(file, SWIGTYPE_p_CXLoadDiag_Error.getCPtr(error), CXString.getCPtr(errorString), errorString);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void disposeDiagnosticSet(SWIGTYPE_p_void Diags) {
    clangjavaJNI.disposeDiagnosticSet(SWIGTYPE_p_void.getCPtr(Diags));
  }

  public static SWIGTYPE_p_void getChildDiagnostics(SWIGTYPE_p_void D) {
    long cPtr = clangjavaJNI.getChildDiagnostics(SWIGTYPE_p_void.getCPtr(D));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static long getNumDiagnostics(SWIGTYPE_p_CXTranslationUnitImpl Unit) {
    return clangjavaJNI.getNumDiagnostics(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(Unit));
  }

  public static SWIGTYPE_p_void getDiagnostic(SWIGTYPE_p_CXTranslationUnitImpl Unit, long Index) {
    long cPtr = clangjavaJNI.getDiagnostic(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(Unit), Index);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void getDiagnosticSetFromTU(SWIGTYPE_p_CXTranslationUnitImpl Unit) {
    long cPtr = clangjavaJNI.getDiagnosticSetFromTU(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(Unit));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void disposeDiagnostic(SWIGTYPE_p_void Diagnostic) {
    clangjavaJNI.disposeDiagnostic(SWIGTYPE_p_void.getCPtr(Diagnostic));
  }

  public static CXString formatDiagnostic(SWIGTYPE_p_void Diagnostic, long Options) {
    return new CXString(clangjavaJNI.formatDiagnostic(SWIGTYPE_p_void.getCPtr(Diagnostic), Options), true);
  }

  public static long defaultDiagnosticDisplayOptions() {
    return clangjavaJNI.defaultDiagnosticDisplayOptions();
  }

  public static CXDiagnosticSeverity getDiagnosticSeverity(SWIGTYPE_p_void arg0) {
    return CXDiagnosticSeverity.swigToEnum(clangjavaJNI.getDiagnosticSeverity(SWIGTYPE_p_void.getCPtr(arg0)));
  }

  public static CXSourceLocation getDiagnosticLocation(SWIGTYPE_p_void arg0) {
    return new CXSourceLocation(clangjavaJNI.getDiagnosticLocation(SWIGTYPE_p_void.getCPtr(arg0)), true);
  }

  public static CXString getDiagnosticSpelling(SWIGTYPE_p_void arg0) {
    return new CXString(clangjavaJNI.getDiagnosticSpelling(SWIGTYPE_p_void.getCPtr(arg0)), true);
  }

  public static CXString getDiagnosticOption(SWIGTYPE_p_void Diag, CXString Disable) {
    return new CXString(clangjavaJNI.getDiagnosticOption(SWIGTYPE_p_void.getCPtr(Diag), CXString.getCPtr(Disable), Disable), true);
  }

  public static long getDiagnosticCategory(SWIGTYPE_p_void arg0) {
    return clangjavaJNI.getDiagnosticCategory(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static CXString getDiagnosticCategoryName(long Category) {
    return new CXString(clangjavaJNI.getDiagnosticCategoryName(Category), true);
  }

  public static CXString getDiagnosticCategoryText(SWIGTYPE_p_void arg0) {
    return new CXString(clangjavaJNI.getDiagnosticCategoryText(SWIGTYPE_p_void.getCPtr(arg0)), true);
  }

  public static long getDiagnosticNumRanges(SWIGTYPE_p_void arg0) {
    return clangjavaJNI.getDiagnosticNumRanges(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static CXSourceRange getDiagnosticRange(SWIGTYPE_p_void Diagnostic, long Range) {
    return new CXSourceRange(clangjavaJNI.getDiagnosticRange(SWIGTYPE_p_void.getCPtr(Diagnostic), Range), true);
  }

  public static long getDiagnosticNumFixIts(SWIGTYPE_p_void Diagnostic) {
    return clangjavaJNI.getDiagnosticNumFixIts(SWIGTYPE_p_void.getCPtr(Diagnostic));
  }

  public static CXString getDiagnosticFixIt(SWIGTYPE_p_void Diagnostic, long FixIt, CXSourceRange ReplacementRange) {
    return new CXString(clangjavaJNI.getDiagnosticFixIt(SWIGTYPE_p_void.getCPtr(Diagnostic), FixIt, CXSourceRange.getCPtr(ReplacementRange), ReplacementRange), true);
  }

  public static CXString getTranslationUnitSpelling(SWIGTYPE_p_CXTranslationUnitImpl CTUnit) {
    return new CXString(clangjavaJNI.getTranslationUnitSpelling(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(CTUnit)), true);
  }

  public static SWIGTYPE_p_CXTranslationUnitImpl createTranslationUnitFromSourceFile(SWIGTYPE_p_void CIdx, String source_filename, int num_clang_command_line_args, String[] clang_command_line_args, long num_unsaved_files, CXUnsavedFile unsaved_files) {
    long cPtr = clangjavaJNI.createTranslationUnitFromSourceFile(SWIGTYPE_p_void.getCPtr(CIdx), source_filename, num_clang_command_line_args, clang_command_line_args, num_unsaved_files, CXUnsavedFile.getCPtr(unsaved_files), unsaved_files);
    return (cPtr == 0) ? null : new SWIGTYPE_p_CXTranslationUnitImpl(cPtr, false);
  }

  public static SWIGTYPE_p_CXTranslationUnitImpl createTranslationUnit(SWIGTYPE_p_void arg0, String ast_filename) {
    long cPtr = clangjavaJNI.createTranslationUnit(SWIGTYPE_p_void.getCPtr(arg0), ast_filename);
    return (cPtr == 0) ? null : new SWIGTYPE_p_CXTranslationUnitImpl(cPtr, false);
  }

  public static long defaultEditingTranslationUnitOptions() {
    return clangjavaJNI.defaultEditingTranslationUnitOptions();
  }

  public static SWIGTYPE_p_CXTranslationUnitImpl parseTranslationUnit(SWIGTYPE_p_void CIdx, String source_filename, String[] command_line_args, int num_command_line_args, CXUnsavedFile unsaved_files, long num_unsaved_files, long options) {
    long cPtr = clangjavaJNI.parseTranslationUnit(SWIGTYPE_p_void.getCPtr(CIdx), source_filename, command_line_args, num_command_line_args, CXUnsavedFile.getCPtr(unsaved_files), unsaved_files, num_unsaved_files, options);
    return (cPtr == 0) ? null : new SWIGTYPE_p_CXTranslationUnitImpl(cPtr, false);
  }

  public static long defaultSaveOptions(SWIGTYPE_p_CXTranslationUnitImpl TU) {
    return clangjavaJNI.defaultSaveOptions(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU));
  }

  public static int saveTranslationUnit(SWIGTYPE_p_CXTranslationUnitImpl TU, String FileName, long options) {
    return clangjavaJNI.saveTranslationUnit(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU), FileName, options);
  }

  public static void disposeTranslationUnit(SWIGTYPE_p_CXTranslationUnitImpl arg0) {
    clangjavaJNI.disposeTranslationUnit(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg0));
  }

  public static long defaultReparseOptions(SWIGTYPE_p_CXTranslationUnitImpl TU) {
    return clangjavaJNI.defaultReparseOptions(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU));
  }

  public static int reparseTranslationUnit(SWIGTYPE_p_CXTranslationUnitImpl TU, long num_unsaved_files, CXUnsavedFile unsaved_files, long options) {
    return clangjavaJNI.reparseTranslationUnit(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU), num_unsaved_files, CXUnsavedFile.getCPtr(unsaved_files), unsaved_files, options);
  }

  public static String getTUResourceUsageName(CXTUResourceUsageKind kind) {
    return clangjavaJNI.getTUResourceUsageName(kind.swigValue());
  }

  public static CXTUResourceUsage getCXTUResourceUsage(SWIGTYPE_p_CXTranslationUnitImpl TU) {
    return new CXTUResourceUsage(clangjavaJNI.getCXTUResourceUsage(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU)), true);
  }

  public static void disposeCXTUResourceUsage(CXTUResourceUsage usage) {
    clangjavaJNI.disposeCXTUResourceUsage(CXTUResourceUsage.getCPtr(usage), usage);
  }

  public static CXCursor getNullCursor() {
    return new CXCursor(clangjavaJNI.getNullCursor(), true);
  }

  public static CXCursor getTranslationUnitCursor(SWIGTYPE_p_CXTranslationUnitImpl arg0) {
    return new CXCursor(clangjavaJNI.getTranslationUnitCursor(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg0)), true);
  }

  public static long equalCursors(CXCursor arg0, CXCursor arg1) {
    return clangjavaJNI.equalCursors(CXCursor.getCPtr(arg0), arg0, CXCursor.getCPtr(arg1), arg1);
  }

  public static int Cursor_isNull(CXCursor cursor) {
    return clangjavaJNI.Cursor_isNull(CXCursor.getCPtr(cursor), cursor);
  }

  public static long hashCursor(CXCursor arg0) {
    return clangjavaJNI.hashCursor(CXCursor.getCPtr(arg0), arg0);
  }

  public static CXCursorKind getCursorKind(CXCursor arg0) {
    return CXCursorKind.swigToEnum(clangjavaJNI.getCursorKind(CXCursor.getCPtr(arg0), arg0));
  }

  public static long isDeclaration(CXCursorKind arg0) {
    return clangjavaJNI.isDeclaration(arg0.swigValue());
  }

  public static long isReference(CXCursorKind arg0) {
    return clangjavaJNI.isReference(arg0.swigValue());
  }

  public static long isExpression(CXCursorKind arg0) {
    return clangjavaJNI.isExpression(arg0.swigValue());
  }

  public static long isStatement(CXCursorKind arg0) {
    return clangjavaJNI.isStatement(arg0.swigValue());
  }

  public static long isAttribute(CXCursorKind arg0) {
    return clangjavaJNI.isAttribute(arg0.swigValue());
  }

  public static long isInvalid(CXCursorKind arg0) {
    return clangjavaJNI.isInvalid(arg0.swigValue());
  }

  public static long isTranslationUnit(CXCursorKind arg0) {
    return clangjavaJNI.isTranslationUnit(arg0.swigValue());
  }

  public static long isPreprocessing(CXCursorKind arg0) {
    return clangjavaJNI.isPreprocessing(arg0.swigValue());
  }

  public static long isUnexposed(CXCursorKind arg0) {
    return clangjavaJNI.isUnexposed(arg0.swigValue());
  }

  public static CXLinkageKind getCursorLinkage(CXCursor cursor) {
    return CXLinkageKind.swigToEnum(clangjavaJNI.getCursorLinkage(CXCursor.getCPtr(cursor), cursor));
  }

  public static CXAvailabilityKind getCursorAvailability(CXCursor cursor) {
    return CXAvailabilityKind.swigToEnum(clangjavaJNI.getCursorAvailability(CXCursor.getCPtr(cursor), cursor));
  }

  public static int getCursorPlatformAvailability(CXCursor cursor, long[] always_deprecated, CXString deprecated_message, long[] always_unavailable, CXString unavailable_message, CXPlatformAvailability availability, int availability_size) {
    return clangjavaJNI.getCursorPlatformAvailability(CXCursor.getCPtr(cursor), cursor, always_deprecated, CXString.getCPtr(deprecated_message), deprecated_message, always_unavailable, CXString.getCPtr(unavailable_message), unavailable_message, CXPlatformAvailability.getCPtr(availability), availability, availability_size);
  }

  public static void disposeCXPlatformAvailability(CXPlatformAvailability availability) {
    clangjavaJNI.disposeCXPlatformAvailability(CXPlatformAvailability.getCPtr(availability), availability);
  }

  public static CXLanguageKind getCursorLanguage(CXCursor cursor) {
    return CXLanguageKind.swigToEnum(clangjavaJNI.getCursorLanguage(CXCursor.getCPtr(cursor), cursor));
  }

  public static SWIGTYPE_p_CXTranslationUnitImpl Cursor_getTranslationUnit(CXCursor arg0) {
    long cPtr = clangjavaJNI.Cursor_getTranslationUnit(CXCursor.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new SWIGTYPE_p_CXTranslationUnitImpl(cPtr, false);
  }

  public static SWIGTYPE_p_CXCursorSetImpl createCXCursorSet() {
    long cPtr = clangjavaJNI.createCXCursorSet();
    return (cPtr == 0) ? null : new SWIGTYPE_p_CXCursorSetImpl(cPtr, false);
  }

  public static void disposeCXCursorSet(SWIGTYPE_p_CXCursorSetImpl cset) {
    clangjavaJNI.disposeCXCursorSet(SWIGTYPE_p_CXCursorSetImpl.getCPtr(cset));
  }

  public static long CXCursorSet_contains(SWIGTYPE_p_CXCursorSetImpl cset, CXCursor cursor) {
    return clangjavaJNI.CXCursorSet_contains(SWIGTYPE_p_CXCursorSetImpl.getCPtr(cset), CXCursor.getCPtr(cursor), cursor);
  }

  public static long CXCursorSet_insert(SWIGTYPE_p_CXCursorSetImpl cset, CXCursor cursor) {
    return clangjavaJNI.CXCursorSet_insert(SWIGTYPE_p_CXCursorSetImpl.getCPtr(cset), CXCursor.getCPtr(cursor), cursor);
  }

  public static CXCursor getCursorSemanticParent(CXCursor cursor) {
    return new CXCursor(clangjavaJNI.getCursorSemanticParent(CXCursor.getCPtr(cursor), cursor), true);
  }

  public static CXCursor getCursorLexicalParent(CXCursor cursor) {
    return new CXCursor(clangjavaJNI.getCursorLexicalParent(CXCursor.getCPtr(cursor), cursor), true);
  }

  public static void getOverriddenCursors(CXCursor cursor, SWIGTYPE_p_p_CXCursor overridden, long[] num_overridden) {
    clangjavaJNI.getOverriddenCursors(CXCursor.getCPtr(cursor), cursor, SWIGTYPE_p_p_CXCursor.getCPtr(overridden), num_overridden);
  }

  public static void disposeOverriddenCursors(CXCursor overridden) {
    clangjavaJNI.disposeOverriddenCursors(CXCursor.getCPtr(overridden), overridden);
  }

  public static SWIGTYPE_p_void getIncludedFile(CXCursor cursor) {
    long cPtr = clangjavaJNI.getIncludedFile(CXCursor.getCPtr(cursor), cursor);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static CXCursor getCursor(SWIGTYPE_p_CXTranslationUnitImpl arg0, CXSourceLocation arg1) {
    return new CXCursor(clangjavaJNI.getCursor(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg0), CXSourceLocation.getCPtr(arg1), arg1), true);
  }

  public static CXSourceLocation getCursorLocation(CXCursor arg0) {
    return new CXSourceLocation(clangjavaJNI.getCursorLocation(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static CXSourceRange getCursorExtent(CXCursor arg0) {
    return new CXSourceRange(clangjavaJNI.getCursorExtent(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static CXType getCursorType(CXCursor C) {
    return new CXType(clangjavaJNI.getCursorType(CXCursor.getCPtr(C), C), true);
  }

  public static CXString getTypeSpelling(CXType CT) {
    return new CXString(clangjavaJNI.getTypeSpelling(CXType.getCPtr(CT), CT), true);
  }

  public static CXType getTypedefDeclUnderlyingType(CXCursor C) {
    return new CXType(clangjavaJNI.getTypedefDeclUnderlyingType(CXCursor.getCPtr(C), C), true);
  }

  public static CXType getEnumDeclIntegerType(CXCursor C) {
    return new CXType(clangjavaJNI.getEnumDeclIntegerType(CXCursor.getCPtr(C), C), true);
  }

  public static long getEnumConstantDeclValue(CXCursor C) {
    return clangjavaJNI.getEnumConstantDeclValue(CXCursor.getCPtr(C), C);
  }

  public static java.math.BigInteger getEnumConstantDeclUnsignedValue(CXCursor C) {
    return clangjavaJNI.getEnumConstantDeclUnsignedValue(CXCursor.getCPtr(C), C);
  }

  public static int getFieldDeclBitWidth(CXCursor C) {
    return clangjavaJNI.getFieldDeclBitWidth(CXCursor.getCPtr(C), C);
  }

  public static int Cursor_getNumArguments(CXCursor C) {
    return clangjavaJNI.Cursor_getNumArguments(CXCursor.getCPtr(C), C);
  }

  public static CXCursor Cursor_getArgument(CXCursor C, long i) {
    return new CXCursor(clangjavaJNI.Cursor_getArgument(CXCursor.getCPtr(C), C, i), true);
  }

  public static long equalTypes(CXType A, CXType B) {
    return clangjavaJNI.equalTypes(CXType.getCPtr(A), A, CXType.getCPtr(B), B);
  }

  public static CXType getCanonicalType(CXType T) {
    return new CXType(clangjavaJNI.getCanonicalType(CXType.getCPtr(T), T), true);
  }

  public static long isConstQualifiedType(CXType T) {
    return clangjavaJNI.isConstQualifiedType(CXType.getCPtr(T), T);
  }

  public static long isVolatileQualifiedType(CXType T) {
    return clangjavaJNI.isVolatileQualifiedType(CXType.getCPtr(T), T);
  }

  public static long isRestrictQualifiedType(CXType T) {
    return clangjavaJNI.isRestrictQualifiedType(CXType.getCPtr(T), T);
  }

  public static CXType getPointeeType(CXType T) {
    return new CXType(clangjavaJNI.getPointeeType(CXType.getCPtr(T), T), true);
  }

  public static CXCursor getTypeDeclaration(CXType T) {
    return new CXCursor(clangjavaJNI.getTypeDeclaration(CXType.getCPtr(T), T), true);
  }

  public static CXString getDeclObjCTypeEncoding(CXCursor C) {
    return new CXString(clangjavaJNI.getDeclObjCTypeEncoding(CXCursor.getCPtr(C), C), true);
  }

  public static CXString getTypeKindSpelling(CXTypeKind K) {
    return new CXString(clangjavaJNI.getTypeKindSpelling(K.swigValue()), true);
  }

  public static CXCallingConv getFunctionTypeCallingConv(CXType T) {
    return CXCallingConv.swigToEnum(clangjavaJNI.getFunctionTypeCallingConv(CXType.getCPtr(T), T));
  }

  public static CXType getResultType(CXType T) {
    return new CXType(clangjavaJNI.getResultType(CXType.getCPtr(T), T), true);
  }

  public static int getNumArgTypes(CXType T) {
    return clangjavaJNI.getNumArgTypes(CXType.getCPtr(T), T);
  }

  public static CXType getArgType(CXType T, long i) {
    return new CXType(clangjavaJNI.getArgType(CXType.getCPtr(T), T, i), true);
  }

  public static long isFunctionTypeVariadic(CXType T) {
    return clangjavaJNI.isFunctionTypeVariadic(CXType.getCPtr(T), T);
  }

  public static CXType getCursorResultType(CXCursor C) {
    return new CXType(clangjavaJNI.getCursorResultType(CXCursor.getCPtr(C), C), true);
  }

  public static long isPODType(CXType T) {
    return clangjavaJNI.isPODType(CXType.getCPtr(T), T);
  }

  public static CXType getElementType(CXType T) {
    return new CXType(clangjavaJNI.getElementType(CXType.getCPtr(T), T), true);
  }

  public static long getNumElements(CXType T) {
    return clangjavaJNI.getNumElements(CXType.getCPtr(T), T);
  }

  public static CXType getArrayElementType(CXType T) {
    return new CXType(clangjavaJNI.getArrayElementType(CXType.getCPtr(T), T), true);
  }

  public static long getArraySize(CXType T) {
    return clangjavaJNI.getArraySize(CXType.getCPtr(T), T);
  }

  public static long Type_getAlignOf(CXType T) {
    return clangjavaJNI.Type_getAlignOf(CXType.getCPtr(T), T);
  }

  public static long Type_getSizeOf(CXType T) {
    return clangjavaJNI.Type_getSizeOf(CXType.getCPtr(T), T);
  }

  public static long Type_getOffsetOf(CXType T, String S) {
    return clangjavaJNI.Type_getOffsetOf(CXType.getCPtr(T), T, S);
  }

  public static long Cursor_isBitField(CXCursor C) {
    return clangjavaJNI.Cursor_isBitField(CXCursor.getCPtr(C), C);
  }

  public static long isVirtualBase(CXCursor arg0) {
    return clangjavaJNI.isVirtualBase(CXCursor.getCPtr(arg0), arg0);
  }

  public static CX_CXXAccessSpecifier getCXXAccessSpecifier(CXCursor arg0) {
    return CX_CXXAccessSpecifier.swigToEnum(clangjavaJNI.getCXXAccessSpecifier(CXCursor.getCPtr(arg0), arg0));
  }

  public static long getNumOverloadedDecls(CXCursor cursor) {
    return clangjavaJNI.getNumOverloadedDecls(CXCursor.getCPtr(cursor), cursor);
  }

  public static CXCursor getOverloadedDecl(CXCursor cursor, long index) {
    return new CXCursor(clangjavaJNI.getOverloadedDecl(CXCursor.getCPtr(cursor), cursor, index), true);
  }

  public static CXType getIBOutletCollectionType(CXCursor arg0) {
    return new CXType(clangjavaJNI.getIBOutletCollectionType(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static long visitChildren(CXCursor parent, st.bug.clang.wrappers.CursorVisitorWrapper visitor) {
    return clangjavaJNI.visitChildren(CXCursor.getCPtr(parent), parent, visitor);
  }

  public static CXString getCursorUSR(CXCursor arg0) {
    return new CXString(clangjavaJNI.getCursorUSR(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static CXString constructUSR_ObjCClass(String class_name) {
    return new CXString(clangjavaJNI.constructUSR_ObjCClass(class_name), true);
  }

  public static CXString constructUSR_ObjCCategory(String class_name, String category_name) {
    return new CXString(clangjavaJNI.constructUSR_ObjCCategory(class_name, category_name), true);
  }

  public static CXString constructUSR_ObjCProtocol(String protocol_name) {
    return new CXString(clangjavaJNI.constructUSR_ObjCProtocol(protocol_name), true);
  }

  public static CXString constructUSR_ObjCIvar(String name, CXString classUSR) {
    return new CXString(clangjavaJNI.constructUSR_ObjCIvar(name, CXString.getCPtr(classUSR), classUSR), true);
  }

  public static CXString constructUSR_ObjCMethod(String name, long isInstanceMethod, CXString classUSR) {
    return new CXString(clangjavaJNI.constructUSR_ObjCMethod(name, isInstanceMethod, CXString.getCPtr(classUSR), classUSR), true);
  }

  public static CXString constructUSR_ObjCProperty(String property, CXString classUSR) {
    return new CXString(clangjavaJNI.constructUSR_ObjCProperty(property, CXString.getCPtr(classUSR), classUSR), true);
  }

  public static CXString getCursorSpelling(CXCursor arg0) {
    return new CXString(clangjavaJNI.getCursorSpelling(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static CXSourceRange Cursor_getSpellingNameRange(CXCursor arg0, long pieceIndex, long options) {
    return new CXSourceRange(clangjavaJNI.Cursor_getSpellingNameRange(CXCursor.getCPtr(arg0), arg0, pieceIndex, options), true);
  }

  public static CXString getCursorDisplayName(CXCursor arg0) {
    return new CXString(clangjavaJNI.getCursorDisplayName(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static CXCursor getCursorReferenced(CXCursor arg0) {
    return new CXCursor(clangjavaJNI.getCursorReferenced(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static CXCursor getCursorDefinition(CXCursor arg0) {
    return new CXCursor(clangjavaJNI.getCursorDefinition(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static long isCursorDefinition(CXCursor arg0) {
    return clangjavaJNI.isCursorDefinition(CXCursor.getCPtr(arg0), arg0);
  }

  public static CXCursor getCanonicalCursor(CXCursor arg0) {
    return new CXCursor(clangjavaJNI.getCanonicalCursor(CXCursor.getCPtr(arg0), arg0), true);
  }

  public static int Cursor_getObjCSelectorIndex(CXCursor arg0) {
    return clangjavaJNI.Cursor_getObjCSelectorIndex(CXCursor.getCPtr(arg0), arg0);
  }

  public static int Cursor_isDynamicCall(CXCursor C) {
    return clangjavaJNI.Cursor_isDynamicCall(CXCursor.getCPtr(C), C);
  }

  public static CXType Cursor_getReceiverType(CXCursor C) {
    return new CXType(clangjavaJNI.Cursor_getReceiverType(CXCursor.getCPtr(C), C), true);
  }

  public static long Cursor_getObjCPropertyAttributes(CXCursor C, long reserved) {
    return clangjavaJNI.Cursor_getObjCPropertyAttributes(CXCursor.getCPtr(C), C, reserved);
  }

  public static long Cursor_getObjCDeclQualifiers(CXCursor C) {
    return clangjavaJNI.Cursor_getObjCDeclQualifiers(CXCursor.getCPtr(C), C);
  }

  public static long Cursor_isVariadic(CXCursor C) {
    return clangjavaJNI.Cursor_isVariadic(CXCursor.getCPtr(C), C);
  }

  public static CXSourceRange Cursor_getCommentRange(CXCursor C) {
    return new CXSourceRange(clangjavaJNI.Cursor_getCommentRange(CXCursor.getCPtr(C), C), true);
  }

  public static CXString Cursor_getRawCommentText(CXCursor C) {
    return new CXString(clangjavaJNI.Cursor_getRawCommentText(CXCursor.getCPtr(C), C), true);
  }

  public static CXString Cursor_getBriefCommentText(CXCursor C) {
    return new CXString(clangjavaJNI.Cursor_getBriefCommentText(CXCursor.getCPtr(C), C), true);
  }

  public static CXComment Cursor_getParsedComment(CXCursor C) {
    return new CXComment(clangjavaJNI.Cursor_getParsedComment(CXCursor.getCPtr(C), C), true);
  }

  public static SWIGTYPE_p_void Cursor_getModule(CXCursor C) {
    long cPtr = clangjavaJNI.Cursor_getModule(CXCursor.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void Module_getASTFile(SWIGTYPE_p_void Module) {
    long cPtr = clangjavaJNI.Module_getASTFile(SWIGTYPE_p_void.getCPtr(Module));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void Module_getParent(SWIGTYPE_p_void Module) {
    long cPtr = clangjavaJNI.Module_getParent(SWIGTYPE_p_void.getCPtr(Module));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static CXString Module_getName(SWIGTYPE_p_void Module) {
    return new CXString(clangjavaJNI.Module_getName(SWIGTYPE_p_void.getCPtr(Module)), true);
  }

  public static CXString Module_getFullName(SWIGTYPE_p_void Module) {
    return new CXString(clangjavaJNI.Module_getFullName(SWIGTYPE_p_void.getCPtr(Module)), true);
  }

  public static long Module_getNumTopLevelHeaders(SWIGTYPE_p_CXTranslationUnitImpl arg0, SWIGTYPE_p_void Module) {
    return clangjavaJNI.Module_getNumTopLevelHeaders(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg0), SWIGTYPE_p_void.getCPtr(Module));
  }

  public static SWIGTYPE_p_void Module_getTopLevelHeader(SWIGTYPE_p_CXTranslationUnitImpl arg0, SWIGTYPE_p_void Module, long Index) {
    long cPtr = clangjavaJNI.Module_getTopLevelHeader(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg0), SWIGTYPE_p_void.getCPtr(Module), Index);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static CXCommentKind Comment_getKind(CXComment Comment) {
    return CXCommentKind.swigToEnum(clangjavaJNI.Comment_getKind(CXComment.getCPtr(Comment), Comment));
  }

  public static long Comment_getNumChildren(CXComment Comment) {
    return clangjavaJNI.Comment_getNumChildren(CXComment.getCPtr(Comment), Comment);
  }

  public static CXComment Comment_getChild(CXComment Comment, long ChildIdx) {
    return new CXComment(clangjavaJNI.Comment_getChild(CXComment.getCPtr(Comment), Comment, ChildIdx), true);
  }

  public static long Comment_isWhitespace(CXComment Comment) {
    return clangjavaJNI.Comment_isWhitespace(CXComment.getCPtr(Comment), Comment);
  }

  public static long InlineContentComment_hasTrailingNewline(CXComment Comment) {
    return clangjavaJNI.InlineContentComment_hasTrailingNewline(CXComment.getCPtr(Comment), Comment);
  }

  public static CXString TextComment_getText(CXComment Comment) {
    return new CXString(clangjavaJNI.TextComment_getText(CXComment.getCPtr(Comment), Comment), true);
  }

  public static CXString InlineCommandComment_getCommandName(CXComment Comment) {
    return new CXString(clangjavaJNI.InlineCommandComment_getCommandName(CXComment.getCPtr(Comment), Comment), true);
  }

  public static CXCommentInlineCommandRenderKind InlineCommandComment_getRenderKind(CXComment Comment) {
    return CXCommentInlineCommandRenderKind.swigToEnum(clangjavaJNI.InlineCommandComment_getRenderKind(CXComment.getCPtr(Comment), Comment));
  }

  public static long InlineCommandComment_getNumArgs(CXComment Comment) {
    return clangjavaJNI.InlineCommandComment_getNumArgs(CXComment.getCPtr(Comment), Comment);
  }

  public static CXString InlineCommandComment_getArgText(CXComment Comment, long ArgIdx) {
    return new CXString(clangjavaJNI.InlineCommandComment_getArgText(CXComment.getCPtr(Comment), Comment, ArgIdx), true);
  }

  public static CXString HTMLTagComment_getTagName(CXComment Comment) {
    return new CXString(clangjavaJNI.HTMLTagComment_getTagName(CXComment.getCPtr(Comment), Comment), true);
  }

  public static long HTMLStartTagComment_isSelfClosing(CXComment Comment) {
    return clangjavaJNI.HTMLStartTagComment_isSelfClosing(CXComment.getCPtr(Comment), Comment);
  }

  public static long HTMLStartTag_getNumAttrs(CXComment Comment) {
    return clangjavaJNI.HTMLStartTag_getNumAttrs(CXComment.getCPtr(Comment), Comment);
  }

  public static CXString HTMLStartTag_getAttrName(CXComment Comment, long AttrIdx) {
    return new CXString(clangjavaJNI.HTMLStartTag_getAttrName(CXComment.getCPtr(Comment), Comment, AttrIdx), true);
  }

  public static CXString HTMLStartTag_getAttrValue(CXComment Comment, long AttrIdx) {
    return new CXString(clangjavaJNI.HTMLStartTag_getAttrValue(CXComment.getCPtr(Comment), Comment, AttrIdx), true);
  }

  public static CXString BlockCommandComment_getCommandName(CXComment Comment) {
    return new CXString(clangjavaJNI.BlockCommandComment_getCommandName(CXComment.getCPtr(Comment), Comment), true);
  }

  public static long BlockCommandComment_getNumArgs(CXComment Comment) {
    return clangjavaJNI.BlockCommandComment_getNumArgs(CXComment.getCPtr(Comment), Comment);
  }

  public static CXString BlockCommandComment_getArgText(CXComment Comment, long ArgIdx) {
    return new CXString(clangjavaJNI.BlockCommandComment_getArgText(CXComment.getCPtr(Comment), Comment, ArgIdx), true);
  }

  public static CXComment BlockCommandComment_getParagraph(CXComment Comment) {
    return new CXComment(clangjavaJNI.BlockCommandComment_getParagraph(CXComment.getCPtr(Comment), Comment), true);
  }

  public static CXString ParamCommandComment_getParamName(CXComment Comment) {
    return new CXString(clangjavaJNI.ParamCommandComment_getParamName(CXComment.getCPtr(Comment), Comment), true);
  }

  public static long ParamCommandComment_isParamIndexValid(CXComment Comment) {
    return clangjavaJNI.ParamCommandComment_isParamIndexValid(CXComment.getCPtr(Comment), Comment);
  }

  public static long ParamCommandComment_getParamIndex(CXComment Comment) {
    return clangjavaJNI.ParamCommandComment_getParamIndex(CXComment.getCPtr(Comment), Comment);
  }

  public static long ParamCommandComment_isDirectionExplicit(CXComment Comment) {
    return clangjavaJNI.ParamCommandComment_isDirectionExplicit(CXComment.getCPtr(Comment), Comment);
  }

  public static CXCommentParamPassDirection ParamCommandComment_getDirection(CXComment Comment) {
    return CXCommentParamPassDirection.swigToEnum(clangjavaJNI.ParamCommandComment_getDirection(CXComment.getCPtr(Comment), Comment));
  }

  public static CXString TParamCommandComment_getParamName(CXComment Comment) {
    return new CXString(clangjavaJNI.TParamCommandComment_getParamName(CXComment.getCPtr(Comment), Comment), true);
  }

  public static long TParamCommandComment_isParamPositionValid(CXComment Comment) {
    return clangjavaJNI.TParamCommandComment_isParamPositionValid(CXComment.getCPtr(Comment), Comment);
  }

  public static long TParamCommandComment_getDepth(CXComment Comment) {
    return clangjavaJNI.TParamCommandComment_getDepth(CXComment.getCPtr(Comment), Comment);
  }

  public static long TParamCommandComment_getIndex(CXComment Comment, long Depth) {
    return clangjavaJNI.TParamCommandComment_getIndex(CXComment.getCPtr(Comment), Comment, Depth);
  }

  public static CXString VerbatimBlockLineComment_getText(CXComment Comment) {
    return new CXString(clangjavaJNI.VerbatimBlockLineComment_getText(CXComment.getCPtr(Comment), Comment), true);
  }

  public static CXString VerbatimLineComment_getText(CXComment Comment) {
    return new CXString(clangjavaJNI.VerbatimLineComment_getText(CXComment.getCPtr(Comment), Comment), true);
  }

  public static CXString HTMLTagComment_getAsString(CXComment Comment) {
    return new CXString(clangjavaJNI.HTMLTagComment_getAsString(CXComment.getCPtr(Comment), Comment), true);
  }

  public static CXString FullComment_getAsHTML(CXComment Comment) {
    return new CXString(clangjavaJNI.FullComment_getAsHTML(CXComment.getCPtr(Comment), Comment), true);
  }

  public static CXString FullComment_getAsXML(CXComment Comment) {
    return new CXString(clangjavaJNI.FullComment_getAsXML(CXComment.getCPtr(Comment), Comment), true);
  }

  public static long CXXMethod_isPureVirtual(CXCursor C) {
    return clangjavaJNI.CXXMethod_isPureVirtual(CXCursor.getCPtr(C), C);
  }

  public static long CXXMethod_isStatic(CXCursor C) {
    return clangjavaJNI.CXXMethod_isStatic(CXCursor.getCPtr(C), C);
  }

  public static long CXXMethod_isVirtual(CXCursor C) {
    return clangjavaJNI.CXXMethod_isVirtual(CXCursor.getCPtr(C), C);
  }

  public static CXCursorKind getTemplateCursorKind(CXCursor C) {
    return CXCursorKind.swigToEnum(clangjavaJNI.getTemplateCursorKind(CXCursor.getCPtr(C), C));
  }

  public static CXCursor getSpecializedCursorTemplate(CXCursor C) {
    return new CXCursor(clangjavaJNI.getSpecializedCursorTemplate(CXCursor.getCPtr(C), C), true);
  }

  public static CXSourceRange getCursorReferenceNameRange(CXCursor C, long NameFlags, long PieceIndex) {
    return new CXSourceRange(clangjavaJNI.getCursorReferenceNameRange(CXCursor.getCPtr(C), C, NameFlags, PieceIndex), true);
  }

  public static CXTokenKind getTokenKind(CXToken arg0) {
    return CXTokenKind.swigToEnum(clangjavaJNI.getTokenKind(CXToken.getCPtr(arg0), arg0));
  }

  public static CXString getTokenSpelling(SWIGTYPE_p_CXTranslationUnitImpl arg0, CXToken arg1) {
    return new CXString(clangjavaJNI.getTokenSpelling(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg0), CXToken.getCPtr(arg1), arg1), true);
  }

  public static CXSourceLocation getTokenLocation(SWIGTYPE_p_CXTranslationUnitImpl arg0, CXToken arg1) {
    return new CXSourceLocation(clangjavaJNI.getTokenLocation(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg0), CXToken.getCPtr(arg1), arg1), true);
  }

  public static CXSourceRange getTokenExtent(SWIGTYPE_p_CXTranslationUnitImpl arg0, CXToken arg1) {
    return new CXSourceRange(clangjavaJNI.getTokenExtent(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg0), CXToken.getCPtr(arg1), arg1), true);
  }

  public static void tokenize(SWIGTYPE_p_CXTranslationUnitImpl TU, CXSourceRange Range, SWIGTYPE_p_p_CXToken Tokens, long[] NumTokens) {
    clangjavaJNI.tokenize(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU), CXSourceRange.getCPtr(Range), Range, SWIGTYPE_p_p_CXToken.getCPtr(Tokens), NumTokens);
  }

  public static void annotateTokens(SWIGTYPE_p_CXTranslationUnitImpl TU, CXToken Tokens, long NumTokens, CXCursor Cursors) {
    clangjavaJNI.annotateTokens(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU), CXToken.getCPtr(Tokens), Tokens, NumTokens, CXCursor.getCPtr(Cursors), Cursors);
  }

  public static void disposeTokens(SWIGTYPE_p_CXTranslationUnitImpl TU, CXToken Tokens, long NumTokens) {
    clangjavaJNI.disposeTokens(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU), CXToken.getCPtr(Tokens), Tokens, NumTokens);
  }

  public static CXString getCursorKindSpelling(CXCursorKind Kind) {
    return new CXString(clangjavaJNI.getCursorKindSpelling(Kind.swigValue()), true);
  }

  public static void getDefinitionSpellingAndExtent(CXCursor arg0, SWIGTYPE_p_p_char startBuf, SWIGTYPE_p_p_char endBuf, long[] startLine, long[] startColumn, long[] endLine, long[] endColumn) {
    clangjavaJNI.getDefinitionSpellingAndExtent(CXCursor.getCPtr(arg0), arg0, SWIGTYPE_p_p_char.getCPtr(startBuf), SWIGTYPE_p_p_char.getCPtr(endBuf), startLine, startColumn, endLine, endColumn);
  }

  public static void enableStackTraces() {
    clangjavaJNI.enableStackTraces();
  }

  public static void executeOnThread(SWIGTYPE_p_f_p_void__void fn, SWIGTYPE_p_void user_data, long stack_size) {
    clangjavaJNI.executeOnThread(SWIGTYPE_p_f_p_void__void.getCPtr(fn), SWIGTYPE_p_void.getCPtr(user_data), stack_size);
  }

  public static CXCompletionChunkKind getCompletionChunkKind(SWIGTYPE_p_void completion_string, long chunk_number) {
    return CXCompletionChunkKind.swigToEnum(clangjavaJNI.getCompletionChunkKind(SWIGTYPE_p_void.getCPtr(completion_string), chunk_number));
  }

  public static CXString getCompletionChunkText(SWIGTYPE_p_void completion_string, long chunk_number) {
    return new CXString(clangjavaJNI.getCompletionChunkText(SWIGTYPE_p_void.getCPtr(completion_string), chunk_number), true);
  }

  public static SWIGTYPE_p_void getCompletionChunkCompletionString(SWIGTYPE_p_void completion_string, long chunk_number) {
    long cPtr = clangjavaJNI.getCompletionChunkCompletionString(SWIGTYPE_p_void.getCPtr(completion_string), chunk_number);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static long getNumCompletionChunks(SWIGTYPE_p_void completion_string) {
    return clangjavaJNI.getNumCompletionChunks(SWIGTYPE_p_void.getCPtr(completion_string));
  }

  public static long getCompletionPriority(SWIGTYPE_p_void completion_string) {
    return clangjavaJNI.getCompletionPriority(SWIGTYPE_p_void.getCPtr(completion_string));
  }

  public static CXAvailabilityKind getCompletionAvailability(SWIGTYPE_p_void completion_string) {
    return CXAvailabilityKind.swigToEnum(clangjavaJNI.getCompletionAvailability(SWIGTYPE_p_void.getCPtr(completion_string)));
  }

  public static long getCompletionNumAnnotations(SWIGTYPE_p_void completion_string) {
    return clangjavaJNI.getCompletionNumAnnotations(SWIGTYPE_p_void.getCPtr(completion_string));
  }

  public static CXString getCompletionAnnotation(SWIGTYPE_p_void completion_string, long annotation_number) {
    return new CXString(clangjavaJNI.getCompletionAnnotation(SWIGTYPE_p_void.getCPtr(completion_string), annotation_number), true);
  }

  public static CXString getCompletionParent(SWIGTYPE_p_void completion_string, SWIGTYPE_p_CXCursorKind kind) {
    return new CXString(clangjavaJNI.getCompletionParent(SWIGTYPE_p_void.getCPtr(completion_string), SWIGTYPE_p_CXCursorKind.getCPtr(kind)), true);
  }

  public static CXString getCompletionBriefComment(SWIGTYPE_p_void completion_string) {
    return new CXString(clangjavaJNI.getCompletionBriefComment(SWIGTYPE_p_void.getCPtr(completion_string)), true);
  }

  public static SWIGTYPE_p_void getCursorCompletionString(CXCursor cursor) {
    long cPtr = clangjavaJNI.getCursorCompletionString(CXCursor.getCPtr(cursor), cursor);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static long defaultCodeCompleteOptions() {
    return clangjavaJNI.defaultCodeCompleteOptions();
  }

  public static CXCodeCompleteResults codeCompleteAt(SWIGTYPE_p_CXTranslationUnitImpl TU, String complete_filename, long complete_line, long complete_column, CXUnsavedFile unsaved_files, long num_unsaved_files, long options) {
    long cPtr = clangjavaJNI.codeCompleteAt(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU), complete_filename, complete_line, complete_column, CXUnsavedFile.getCPtr(unsaved_files), unsaved_files, num_unsaved_files, options);
    return (cPtr == 0) ? null : new CXCodeCompleteResults(cPtr, false);
  }

  public static void sortCodeCompletionResults(CXCompletionResult Results, long NumResults) {
    clangjavaJNI.sortCodeCompletionResults(CXCompletionResult.getCPtr(Results), Results, NumResults);
  }

  public static void disposeCodeCompleteResults(CXCodeCompleteResults Results) {
    clangjavaJNI.disposeCodeCompleteResults(CXCodeCompleteResults.getCPtr(Results), Results);
  }

  public static long codeCompleteGetNumDiagnostics(CXCodeCompleteResults Results) {
    return clangjavaJNI.codeCompleteGetNumDiagnostics(CXCodeCompleteResults.getCPtr(Results), Results);
  }

  public static SWIGTYPE_p_void codeCompleteGetDiagnostic(CXCodeCompleteResults Results, long Index) {
    long cPtr = clangjavaJNI.codeCompleteGetDiagnostic(CXCodeCompleteResults.getCPtr(Results), Results, Index);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static java.math.BigInteger codeCompleteGetContexts(CXCodeCompleteResults Results) {
    return clangjavaJNI.codeCompleteGetContexts(CXCodeCompleteResults.getCPtr(Results), Results);
  }

  public static CXCursorKind codeCompleteGetContainerKind(CXCodeCompleteResults Results, long[] IsIncomplete) {
    return CXCursorKind.swigToEnum(clangjavaJNI.codeCompleteGetContainerKind(CXCodeCompleteResults.getCPtr(Results), Results, IsIncomplete));
  }

  public static CXString codeCompleteGetContainerUSR(CXCodeCompleteResults Results) {
    return new CXString(clangjavaJNI.codeCompleteGetContainerUSR(CXCodeCompleteResults.getCPtr(Results), Results), true);
  }

  public static CXString codeCompleteGetObjCSelector(CXCodeCompleteResults Results) {
    return new CXString(clangjavaJNI.codeCompleteGetObjCSelector(CXCodeCompleteResults.getCPtr(Results), Results), true);
  }

  public static CXString getClangVersion() {
    return new CXString(clangjavaJNI.getClangVersion(), true);
  }

  public static void toggleCrashRecovery(long isEnabled) {
    clangjavaJNI.toggleCrashRecovery(isEnabled);
  }

  public static void getInclusions(SWIGTYPE_p_CXTranslationUnitImpl tu, SWIGTYPE_p_f_p_void_p_CXSourceLocation_unsigned_int_p_void__void visitor, SWIGTYPE_p_void client_data) {
    clangjavaJNI.getInclusions(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(tu), SWIGTYPE_p_f_p_void_p_CXSourceLocation_unsigned_int_p_void__void.getCPtr(visitor), SWIGTYPE_p_void.getCPtr(client_data));
  }

  public static SWIGTYPE_p_void getRemappings(String path) {
    long cPtr = clangjavaJNI.getRemappings(path);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void getRemappingsFromFileList(SWIGTYPE_p_p_char filePaths, long numFiles) {
    long cPtr = clangjavaJNI.getRemappingsFromFileList(SWIGTYPE_p_p_char.getCPtr(filePaths), numFiles);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static long remap_getNumFiles(SWIGTYPE_p_void arg0) {
    return clangjavaJNI.remap_getNumFiles(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static void remap_getFilenames(SWIGTYPE_p_void arg0, long index, CXString original, CXString transformed) {
    clangjavaJNI.remap_getFilenames(SWIGTYPE_p_void.getCPtr(arg0), index, CXString.getCPtr(original), original, CXString.getCPtr(transformed), transformed);
  }

  public static void remap_dispose(SWIGTYPE_p_void arg0) {
    clangjavaJNI.remap_dispose(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static CXResult findReferencesInFile(CXCursor cursor, SWIGTYPE_p_void file, CXCursorAndRangeVisitor visitor) {
    return CXResult.swigToEnum(clangjavaJNI.findReferencesInFile(CXCursor.getCPtr(cursor), cursor, SWIGTYPE_p_void.getCPtr(file), CXCursorAndRangeVisitor.getCPtr(visitor), visitor));
  }

  public static CXResult findIncludesInFile(SWIGTYPE_p_CXTranslationUnitImpl TU, SWIGTYPE_p_void file, CXCursorAndRangeVisitor visitor) {
    return CXResult.swigToEnum(clangjavaJNI.findIncludesInFile(SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(TU), SWIGTYPE_p_void.getCPtr(file), CXCursorAndRangeVisitor.getCPtr(visitor), visitor));
  }

  public static int index_isEntityObjCContainerKind(CXIdxEntityKind arg0) {
    return clangjavaJNI.index_isEntityObjCContainerKind(arg0.swigValue());
  }

  public static CXIdxObjCContainerDeclInfo index_getObjCContainerDeclInfo(CXIdxDeclInfo arg0) {
    long cPtr = clangjavaJNI.index_getObjCContainerDeclInfo(CXIdxDeclInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new CXIdxObjCContainerDeclInfo(cPtr, false);
  }

  public static CXIdxObjCInterfaceDeclInfo index_getObjCInterfaceDeclInfo(CXIdxDeclInfo arg0) {
    long cPtr = clangjavaJNI.index_getObjCInterfaceDeclInfo(CXIdxDeclInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new CXIdxObjCInterfaceDeclInfo(cPtr, false);
  }

  public static CXIdxObjCCategoryDeclInfo index_getObjCCategoryDeclInfo(CXIdxDeclInfo arg0) {
    long cPtr = clangjavaJNI.index_getObjCCategoryDeclInfo(CXIdxDeclInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new CXIdxObjCCategoryDeclInfo(cPtr, false);
  }

  public static CXIdxObjCProtocolRefListInfo index_getObjCProtocolRefListInfo(CXIdxDeclInfo arg0) {
    long cPtr = clangjavaJNI.index_getObjCProtocolRefListInfo(CXIdxDeclInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new CXIdxObjCProtocolRefListInfo(cPtr, false);
  }

  public static CXIdxObjCPropertyDeclInfo index_getObjCPropertyDeclInfo(CXIdxDeclInfo arg0) {
    long cPtr = clangjavaJNI.index_getObjCPropertyDeclInfo(CXIdxDeclInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new CXIdxObjCPropertyDeclInfo(cPtr, false);
  }

  public static CXIdxIBOutletCollectionAttrInfo index_getIBOutletCollectionAttrInfo(CXIdxAttrInfo arg0) {
    long cPtr = clangjavaJNI.index_getIBOutletCollectionAttrInfo(CXIdxAttrInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new CXIdxIBOutletCollectionAttrInfo(cPtr, false);
  }

  public static CXIdxCXXClassDeclInfo index_getCXXClassDeclInfo(CXIdxDeclInfo arg0) {
    long cPtr = clangjavaJNI.index_getCXXClassDeclInfo(CXIdxDeclInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new CXIdxCXXClassDeclInfo(cPtr, false);
  }

  public static SWIGTYPE_p_void index_getClientContainer(CXIdxContainerInfo arg0) {
    long cPtr = clangjavaJNI.index_getClientContainer(CXIdxContainerInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void index_setClientContainer(CXIdxContainerInfo arg0, SWIGTYPE_p_void arg1) {
    clangjavaJNI.index_setClientContainer(CXIdxContainerInfo.getCPtr(arg0), arg0, SWIGTYPE_p_void.getCPtr(arg1));
  }

  public static SWIGTYPE_p_void index_getClientEntity(CXIdxEntityInfo arg0) {
    long cPtr = clangjavaJNI.index_getClientEntity(CXIdxEntityInfo.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void index_setClientEntity(CXIdxEntityInfo arg0, SWIGTYPE_p_void arg1) {
    clangjavaJNI.index_setClientEntity(CXIdxEntityInfo.getCPtr(arg0), arg0, SWIGTYPE_p_void.getCPtr(arg1));
  }

  public static SWIGTYPE_p_void IndexAction_create(SWIGTYPE_p_void CIdx) {
    long cPtr = clangjavaJNI.IndexAction_create(SWIGTYPE_p_void.getCPtr(CIdx));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void IndexAction_dispose(SWIGTYPE_p_void arg0) {
    clangjavaJNI.IndexAction_dispose(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static int indexSourceFile(SWIGTYPE_p_void arg0, SWIGTYPE_p_void client_data, IndexerCallbacks index_callbacks, long index_callbacks_size, long index_options, String source_filename, String[] command_line_args, int num_command_line_args, CXUnsavedFile unsaved_files, long num_unsaved_files, SWIGTYPE_p_p_CXTranslationUnitImpl out_TU, long TU_options) {
    return clangjavaJNI.indexSourceFile(SWIGTYPE_p_void.getCPtr(arg0), SWIGTYPE_p_void.getCPtr(client_data), IndexerCallbacks.getCPtr(index_callbacks), index_callbacks, index_callbacks_size, index_options, source_filename, command_line_args, num_command_line_args, CXUnsavedFile.getCPtr(unsaved_files), unsaved_files, num_unsaved_files, SWIGTYPE_p_p_CXTranslationUnitImpl.getCPtr(out_TU), TU_options);
  }

  public static int indexTranslationUnit(SWIGTYPE_p_void arg0, SWIGTYPE_p_void client_data, IndexerCallbacks index_callbacks, long index_callbacks_size, long index_options, SWIGTYPE_p_CXTranslationUnitImpl arg5) {
    return clangjavaJNI.indexTranslationUnit(SWIGTYPE_p_void.getCPtr(arg0), SWIGTYPE_p_void.getCPtr(client_data), IndexerCallbacks.getCPtr(index_callbacks), index_callbacks, index_callbacks_size, index_options, SWIGTYPE_p_CXTranslationUnitImpl.getCPtr(arg5));
  }

  public static void indexLoc_getFileLocation(CXIdxLoc loc, SWIGTYPE_p_p_void indexFile, SWIGTYPE_p_p_void file, long[] line, long[] column, long[] offset) {
    clangjavaJNI.indexLoc_getFileLocation(CXIdxLoc.getCPtr(loc), loc, SWIGTYPE_p_p_void.getCPtr(indexFile), SWIGTYPE_p_p_void.getCPtr(file), line, column, offset);
  }

  public static CXSourceLocation indexLoc_getCXSourceLocation(CXIdxLoc loc) {
    return new CXSourceLocation(clangjavaJNI.indexLoc_getCXSourceLocation(CXIdxLoc.getCPtr(loc), loc), true);
  }

  public static SWIGTYPE_p_void CompilationDatabase_fromDirectory(String BuildDir, SWIGTYPE_p_CXCompilationDatabase_Error ErrorCode) {
    long cPtr = clangjavaJNI.CompilationDatabase_fromDirectory(BuildDir, SWIGTYPE_p_CXCompilationDatabase_Error.getCPtr(ErrorCode));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void CompilationDatabase_dispose(SWIGTYPE_p_void arg0) {
    clangjavaJNI.CompilationDatabase_dispose(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static SWIGTYPE_p_void CompilationDatabase_getCompileCommands(SWIGTYPE_p_void arg0, String CompleteFileName) {
    long cPtr = clangjavaJNI.CompilationDatabase_getCompileCommands(SWIGTYPE_p_void.getCPtr(arg0), CompleteFileName);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void CompilationDatabase_getAllCompileCommands(SWIGTYPE_p_void arg0) {
    long cPtr = clangjavaJNI.CompilationDatabase_getAllCompileCommands(SWIGTYPE_p_void.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void CompileCommands_dispose(SWIGTYPE_p_void arg0) {
    clangjavaJNI.CompileCommands_dispose(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static long CompileCommands_getSize(SWIGTYPE_p_void arg0) {
    return clangjavaJNI.CompileCommands_getSize(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static SWIGTYPE_p_void CompileCommands_getCommand(SWIGTYPE_p_void arg0, long I) {
    long cPtr = clangjavaJNI.CompileCommands_getCommand(SWIGTYPE_p_void.getCPtr(arg0), I);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static CXString CompileCommand_getDirectory(SWIGTYPE_p_void arg0) {
    return new CXString(clangjavaJNI.CompileCommand_getDirectory(SWIGTYPE_p_void.getCPtr(arg0)), true);
  }

  public static long CompileCommand_getNumArgs(SWIGTYPE_p_void arg0) {
    return clangjavaJNI.CompileCommand_getNumArgs(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public static CXString CompileCommand_getArg(SWIGTYPE_p_void arg0, long I) {
    return new CXString(clangjavaJNI.CompileCommand_getArg(SWIGTYPE_p_void.getCPtr(arg0), I), true);
  }

}
